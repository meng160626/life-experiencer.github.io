{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"let ratio = 1, waitReplaceList = []; window.onload = function() { const svgOld = document.getElementById('svg-old'); //转换后尺寸输入事件 const size ...","date":"2022-11-01T13:38:19.852Z","updated":"2022-11-01T13:06:35.923Z","comments":true,"path":"api/pages/html/svg-tool/index.js","covers":null,"excerpt":"","content":"let ratio = 1, waitReplaceList = [];\n\nwindow.onload = function() {\n    const svgOld = document.getElementById('svg-old');\n\n    //转换后尺寸输入事件\n    const size = document.getElementById('size');\n    let reg = /\\d+/;\n    size.addEventListener('input', e => {\n        const _value = reg.exec(e.target.value);\n        if(_value) size.value = _value;\n        sizeVal = size.value;\n        disposeFunc();\n    });\n\n    //转换后回显\n    const translate = document.getElementById('translate');\n\n    //预览盒子\n    const preview = document.getElementById('preview');\n    const preview2 = document.getElementById('preview2');\n\n    //svg源码输入事件\n    svgOld.addEventListener('input', e => {\n        disposeFunc();\n    });\n\n    const disposeFunc = function() {\n        let str = svgOld.value;\n        if(!str || str === '') return;\n        preview.innerHTML = str;\n    \n        disposeViewBox(str);\n        disposeD(str);\n    \n        waitReplaceList.forEach(item => {\n            str = str.replace(item.oldStr,item.newStr);\n        });\n        translate.value = str;\n        \n        preview2.innerHTML = str;\n\n        waitReplaceList = [];\n    }\n    \n    //处理viewBox\n    const disposeViewBox = function(value) {\n        if(!size.value || size.value === '') return;\n    \n        let viewBoxReg = /viewBox=\"(\\d+ ){3}\\d+\"/;\n        let viewBoxVal = viewBoxReg.exec(value);\n        let viewBoxValReg = /(\\d+ ){3}\\d+/;\n        let viewBoxValVal = viewBoxValReg.exec(viewBoxVal[0]);\n        let _viewBoxVal = viewBoxValVal[0].split(' ');\n        ratio = size.value / _viewBoxVal[2];\n        let str = '';\n        _viewBoxVal.forEach((item,idx) => {\n            let _item = parseInt(item);\n            switch(idx) {\n                case 0:\n                case 1:\n                    str += _item * ratio + ' ';\n                    break;\n                case 2:\n                    str += size.value + ' ';\n                    break;\n                case 3:\n                    str += size.value;\n                    break;\n            }\n        });\n        waitReplaceList.push({\n            oldStr: viewBoxValVal[0],\n            newStr: str\n        });\n    }\n    \n    //处理d\n    const disposeD = function(value) {\n        if(!size.value || size.value === '') return;\n        let dReg = / d=\"[0-9a-zA-Z\\-., ]+\"/g;\n        let dVal = dReg[Symbol.matchAll](value);\n        let dValReg = /[0-9a-zA-Z\\-., ]+/;\n        [...dVal].forEach(item => {\n            item[0] = item[0].replace(\" d=\",\"\");\n            let dValVal = dValReg.exec(item[0]);\n            const commands = /[a-zA-Z]+[0-9.,\\- ]+/g[Symbol.matchAll](dValVal[0]);\n            [...commands].forEach(item2 => {\n                let newStr = '';\n                if(item2[0].indexOf('a') !== -1 || item2[0].indexOf('A') !== -1) {\n                    let counter = -1;\n                    newStr = item2[0].replaceAll(/[0-9.]+/g,function(data) {\n                        counter++;\n                        return counter % 7 === 3 || counter % 7 === 4 ? data : new Decimal(data).mul(ratio);\n                    });\n                }else {\n                    newStr = item2[0].replaceAll(/[0-9.]+/g,function(data) {\n                        return new Decimal(data).mul(ratio);\n                    });\n                }\n                waitReplaceList.push({\n                    oldStr: item2[0],\n                    newStr\n                });\n            });\n        });\n    }\n}","count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"toc":""}