[{"id":"b945a3fa38137babb32ce78c9f125574","title":"Hexo搭建+配置GitHub Pages","content":"Hexo搭建+配置GitHub Pages1.0 搭建Hexo1.1 安装Node.js1.2 安装Git1.3 使用npm安装Hexo $ npm install -g hexo-cli\n&#x2F;&#x2F; hexo init [folder]\n $ hexo init Blog\n\n1.4 安装主题包$ npm install hexo-theme-aurora\n\n\n\n\n\n\n\n\n\n\n在 node_modules 目录下的hexo-theme-aurora 主题文件夹中复制 _config.yml 文件到根目录下，并重命名为 _config.aurora.yml\n\n\n\n\n\n\n\n\n\n\n\n修改根目录下的_config.yml配置项\n注：配置项的:后必须添加空格，否则会报错映射失败\ntheme: Aurora\n\n1.5 关闭评论\n\n\n\n\n\n\n\n\n全局搜索 ye.render=ie;\n注释这一句代码\n1.6 设置代码高亮\n\n\n\n\n\n\n\n\n修改根目录下的_config.yml配置项\nhighlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: &#39;&#39;\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: false\n  line_number: true\n  tab_replace: &#39;&#39;\n\n1.7 关闭访客量\n\n\n\n\n\n\n\n\n修改根目录下_config.aurora配置项\nbusuanzi:\n  enable: false\n\n\n\n\n\n\n\n\n\n\n后续想要添加或重写算法可以访问[不蒜子](不蒜子 | 不如 (ibruce.info))\n2. 配置到GitHub Pages\n\n\n\n\n\n\n注意\ngit仓库名必须为[用户名].github.io\n\n下载hexo部署插件\n$ npm install hexo-deployer-git --save\n\n\n\n\n\n\n\n\n\n\n修改根目录下_config.yml配置项\nurl: https:&#x2F;&#x2F;meng160626.github.io&#x2F;\n\ndeploy:\n  type: git\n  repo: https:&#x2F;&#x2F;github.com&#x2F;meng160626&#x2F;life-experiencer.github.io.git\n  branch: main\n\n此后可以通过https://meng160626.github.io/访问\n每次部署需要执行如下命令 (又称一键三连\n$ hexo clean\n$ hexo g\n$ hexo d\n\n3. 疑难问题3.1 VS Code控制台无法运行脚本\n\n\n\n\n\n\n\n\n当使用VS Code控制台输入命令hexo server报错在此系统上禁止运行脚本时\n打开Windows设置 -&gt; 搜索PowerShell -&gt; 选择允许 -&gt; 应用\n\n","slug":"Hexo搭建+配置GitHub Pages/index","date":"2023-04-05T16:00:00.000Z","categories_index":"环境搭建及配置","tags_index":"Hexo","author_index":"Life Experiencer"},{"id":"fe07511baca233cfbf08f1c1c1d5d46a","title":"内存泄漏排查记录","content":"\n\n\n\n\n\n场景\n页面长期不关闭后，页面卡死\n\n排查记录\n\n\n\n\n\n\n\n\n1、打开浏览器开发工具性能监视器\n2、操作页面观察js堆大小发现：随着操作次数增加，js堆内存在每次垃圾回收以后逐次增加\n3、刷新页面，查看内存，强制触发垃圾回收，拍摄堆快照\n4、反复操作页面后，再次拍摄堆快照\n5、对比两次快照，打开closure，发现一个闭包函数被反复声明，点击提示的文件位置，发现该函数为使用layui的弹出层时的确定按钮回调中的一个闭包函数\nVue中易引发内存泄漏的情况1、声明的全局变量没有在切换页面时清空 &#x2F; 添加的全局事件没有被移除export default &#123;\n    mounted() &#123;\n        window.test &#x3D; &#123;\n            &#x2F;&#x2F; 此处在全局window对象中引用了本页面的dom对象\n            name: &#39;home&#39;,\n            node: document.getElementById(&#39;home&#39;),\n        &#125;\n    &#125;,\n&#125;\n\n\n\n\n\n\n\n\n\n\n解决方案\ndestroyed () &#123;\n\twindow.test &#x3D; null &#x2F;&#x2F; 页面卸载的时候解除引用\n&#125;\n\n2、添加在EventBus中的事件没有解绑export default &#123;\n    mounted () &#123;\n        this.$EventBus.$on(&#39;homeTask&#39;, res &#x3D;&gt; this.func(res))\n    &#125;\n&#125;\n\n\n\n\n\n\n\n\n\n\n解决方案\ndestroyed () &#123;\n    this.$EventBus.$off()\n&#125;\n\n3、Echarts\n\n\n\n\n\n\n\n\n每一个图例在没有数据的时候它会创建一个定时器去渲染气泡，页面切换后，echarts图例是销毁了，但是这个echarts的实例还在内存当中，同时它的气泡渲染定时器还在运行。这就导致Echarts占用 CPU 高，导致浏览器卡顿，当数据量比较大时甚至浏览器崩溃。\n\n\n\n\n\n\n\n\n\n解决方案\nbeforeDestroy () &#123;\n    this.chart.clear()\n&#125;\n\nES6防止内存泄漏\n\n\n\n\n\n\n\n\nweakset和weakmap 他们对值的引用都是不计入垃圾回收机制的，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存。\nconst wm &#x3D; new WeakMap()\nconst element &#x3D; document.getElementById(&#39;example&#39;)\nwm.set(element, &#39;something&#39;)\nwm.get(element)\n\n\n\n\n\n\n\n\n\n\n上面代码中，先新建一个Weakmap实例。然后，将一个DOM节点作为键名存入该实例，并将一些附加信息作为键值，一起存放在WeakMap里面。这时，WeakMap里面对element的引用就是弱引用，不会被计入垃圾回收机制，一旦element从文档中被移除，绑定的变量也随之销毁，非常适合用于例如绑定事件等操作。\n","slug":"内存泄漏/index","date":"2022-11-18T16:00:00.000Z","categories_index":"效率优化","tags_index":"内存泄漏","author_index":"Life Experiencer"},{"id":"55764d82013bf7d28ae08f515ae0da0c","title":"vite配置https","content":"1.全局安装mkcert$ npm i mkcert -g\n\n2.在任意目录，打开终端输入指令，生成ca证书$ mkcert create-ca\n\n3.再根据ca证书生成cert证书$ mkcert create-cert localhost 127.0.0.1\n\n双击ca.crt导入证书\n点击 安装证书—&gt;勾选本地计算机—&gt;选择将所有证书都放入下列存储中的受信任的根证书颁发机构—&gt;确定导入成功将cert.crt和cert.key放到项目的src&#x2F;assets&#x2F;ssl目录下\n4.配置证书export default defineConfig(&#123;\n  plugins: [vue()],\n  server: &#123;\n    host: &#39;0.0.0.0&#39;,\n    https: &#123;\n      cert: fs.readFileSync(path.join(__dirname, &#39;src&#x2F;assets&#x2F;ssl&#x2F;cert.crt&#39;)),\n      key: fs.readFileSync(path.join(__dirname, &#39;src&#x2F;assets&#x2F;ssl&#x2F;cert.key&#39;))\n    &#125;\n  &#125;,\n&#125;)","slug":"Vite配置https证书/index","date":"2022-10-21T16:00:00.000Z","categories_index":"环境搭建及配置","tags_index":"vite,https","author_index":"Life Experiencer"},{"id":"22dc96c39bfd9211e7d5443bdb3c36d8","title":"小程序嵌入Echarts","content":"1. 构建组件嵌入Echarts新建一个文件夹ec-canvas，用于专门放置echarts相关文件，并创建同名的组件\n前往echarts官网制定自定义主题（因微信小程序大小限制，选择项目中需要用到的即可，尽量减少文件大小），之后将打包好的echarts.js文件放到上述创建好的目录中，然后编写如下代码：\nec-canvas.wxml文件\n&lt;!-- 新的--&gt;\n&lt;canvas\n    wx:if&#x3D;&quot;&#123;&#123;isUseNewCanvas&#125;&#125;&quot;\n\ttype&#x3D;&quot;2d&quot;s\n    class&#x3D;&quot;ec-canvas&quot;\n    canvas-id&#x3D;&quot;&#123;&#123; canvasId &#125;&#125;&quot;\n    bindinit&#x3D;&quot;init&quot;\n    bindtouchstart&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchStart&#39; &#125;&#125;&quot;\n    bindtouchmove&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchMove&#39; &#125;&#125;&quot;\n    bindtouchend&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchEnd&#39; &#125;&#125;&quot;\n&gt;&lt;&#x2F;canvas&gt;\n&lt;!-- 旧的 --&gt;\n&lt;canvas\n    wx:else\n    class&#x3D;&quot;ec-canvas&quot;\n    canvas-id&#x3D;&quot;&#123;&#123; canvasId &#125;&#125;&quot;\n    bindinit&#x3D;&quot;init&quot;\n    bindtouchstart&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchStart&#39; &#125;&#125;&quot;\n    bindtouchmove&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchMove&#39; &#125;&#125;&quot;\n    bindtouchend&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchEnd&#39; &#125;&#125;&quot;\n&gt;&lt;&#x2F;canvas&gt;\n\n\n\n\n\n\n\n提示\n至于为什么用isUseNewCanvas变量控制，可以参考文章\n\nec-canvas.js文件\nimport WxCanvas from &#39;.&#x2F;wx-canvas&#39;;\nimport * as echarts from &#39;.&#x2F;echarts&#39;;\n\nlet ctx;\n\nfunction compareVersion(v1, v2) &#123;\n  v1 &#x3D; v1.split(&#39;.&#39;)\n  v2 &#x3D; v2.split(&#39;.&#39;)\n  const len &#x3D; Math.max(v1.length, v2.length)\n\n  while (v1.length &lt; len) &#123;\n    v1.push(&#39;0&#39;)\n  &#125;\n  while (v2.length &lt; len) &#123;\n    v2.push(&#39;0&#39;)\n  &#125;\n\n  for (let i &#x3D; 0; i &lt; len; i++) &#123;\n    const num1 &#x3D; parseInt(v1[i])\n    const num2 &#x3D; parseInt(v2[i])\n\n    if (num1 &gt; num2) &#123;\n      return 1\n    &#125; else if (num1 &lt; num2) &#123;\n      return -1\n    &#125;\n  &#125;\n  return 0\n&#125;\n\nComponent(&#123;\n  properties: &#123;\n    canvasId: &#123;\n      type: String,\n      value: &#39;ec-canvas&#39;\n    &#125;,\n\n    ec: &#123;\n      type: Object\n    &#125;,\n\n    forceUseOldCanvas: &#123;\n      type: Boolean,\n      value: false\n    &#125;\n  &#125;,\n\n  data: &#123;\n    isUseNewCanvas: true\n  &#125;,\n\n  ready: function () &#123;\n    &#x2F;&#x2F; 禁用渐进式，因为drawImage不支持DOM作为参数\n    &#x2F;&#x2F; 查看 https:&#x2F;&#x2F;developers.weixin.qq.com&#x2F;miniprogram&#x2F;dev&#x2F;api&#x2F;canvas&#x2F;CanvasContext.drawImage.html\n    echarts.registerPreprocessor(option &#x3D;&gt; &#123;\n      if (option &amp;&amp; option.series) &#123;\n        if (option.series.length &gt; 0) &#123;\n          option.series.forEach(series &#x3D;&gt; &#123;\n            series.progressive &#x3D; 0;\n          &#125;);\n        &#125;\n        else if (typeof option.series &#x3D;&#x3D;&#x3D; &#39;object&#39;) &#123;\n          option.series.progressive &#x3D; 0;\n        &#125;\n      &#125;\n    &#125;);\n\n    if (!this.data.ec) &#123;\n      console.warn(&#39;组件需绑定 ec 变量，例：&lt;ec-canvas id&#x3D;&quot;mychart-dom-bar&quot; &#39;\n        + &#39;canvas-id&#x3D;&quot;mychart-bar&quot; ec&#x3D;&quot;&#123;&#123; ec &#125;&#125;&quot;&gt;&lt;&#x2F;ec-canvas&gt;&#39;);\n      return;\n    &#125;\n\n    if (!this.data.ec.lazyLoad) &#123;\n      this.init();\n    &#125;\n  &#125;,\n\n  methods: &#123;\n    init: function (callback) &#123;\n      const version &#x3D; wx.getSystemInfoSync().SDKVersion\n\n      const canUseNewCanvas &#x3D; compareVersion(version, &#39;2.9.0&#39;) &gt;&#x3D; 0;\n      const forceUseOldCanvas &#x3D; this.data.forceUseOldCanvas;\n      const isUseNewCanvas &#x3D; canUseNewCanvas &amp;&amp; !forceUseOldCanvas;\n      this.setData(&#123; isUseNewCanvas &#125;);\n\n      if (forceUseOldCanvas &amp;&amp; canUseNewCanvas) &#123;\n        console.warn(&#39;开发者强制使用旧canvas,建议关闭&#39;);\n      &#125;\n\n      if (isUseNewCanvas) &#123;\n        &#x2F;&#x2F; console.log(&#39;微信基础库版本大于2.9.0，开始使用&lt;canvas type&#x3D;&quot;2d&quot;&#x2F;&gt;&#39;);\n        &#x2F;&#x2F; 2.9.0 可以使用 &lt;canvas type&#x3D;&quot;2d&quot;&gt;&lt;&#x2F;canvas&gt;\n        this.initByNewWay(callback);\n      &#125; else &#123;\n        const isValid &#x3D; compareVersion(version, &#39;1.9.91&#39;) &gt;&#x3D; 0\n        if (!isValid) &#123;\n          console.error(&#39;微信基础库版本过低，需大于等于 1.9.91。&#39;\n            + &#39;参见：https:&#x2F;&#x2F;github.com&#x2F;ecomfe&#x2F;echarts-for-weixin&#39;\n            + &#39;#%E5%BE%AE%E4%BF%A1%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82&#39;);\n          return;\n        &#125; else &#123;\n          console.warn(&#39;建议将微信基础库调整大于等于2.9.0版本。升级后绘图将有更好性能&#39;);\n          this.initByOldWay(callback);\n        &#125;\n      &#125;\n    &#125;,\n\n    initByOldWay(callback) &#123;\n      &#x2F;&#x2F; 1.9.91 &lt;&#x3D; version &lt; 2.9.0：原来的方式初始化\n      ctx &#x3D; wx.createCanvasContext(this.data.canvasId, this);\n      const canvas &#x3D; new WxCanvas(ctx, this.data.canvasId, false);\n\n      echarts.setCanvasCreator(() &#x3D;&gt; &#123;\n        return canvas;\n      &#125;);\n      &#x2F;&#x2F; const canvasDpr &#x3D; wx.getSystemInfoSync().pixelRatio &#x2F;&#x2F; 微信旧的canvas不能传入dpr\n      const canvasDpr &#x3D; 1\n      var query &#x3D; wx.createSelectorQuery().in(this);\n      query.select(&#39;.ec-canvas&#39;).boundingClientRect(res &#x3D;&gt; &#123;\n        if (typeof callback &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n          this.chart &#x3D; callback(canvas, res.width, res.height, canvasDpr);\n        &#125;\n        else if (this.data.ec &amp;&amp; typeof this.data.ec.onInit &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n          this.chart &#x3D; this.data.ec.onInit(canvas, res.width, res.height, canvasDpr);\n        &#125;\n        else &#123;\n          this.triggerEvent(&#39;init&#39;, &#123;\n            canvas: canvas,\n            width: res.width,\n            height: res.height,\n            canvasDpr: canvasDpr &#x2F;&#x2F; 增加了dpr，可方便外面echarts.init\n          &#125;);\n        &#125;\n      &#125;).exec();\n    &#125;,\n\n    initByNewWay(callback) &#123;\n      &#x2F;&#x2F; version &gt;&#x3D; 2.9.0：使用新的方式初始化\n      const query &#x3D; wx.createSelectorQuery().in(this)\n      query\n        .select(&#39;.ec-canvas&#39;)\n        .fields(&#123; node: true, size: true &#125;)\n        .exec(res &#x3D;&gt; &#123;\n          const canvasNode &#x3D; res[0].node\n          this.canvasNode &#x3D; canvasNode\n\n          const canvasDpr &#x3D; wx.getSystemInfoSync().pixelRatio\n          const canvasWidth &#x3D; res[0].width\n          const canvasHeight &#x3D; res[0].height\n\n          const ctx &#x3D; canvasNode.getContext(&#39;2d&#39;)\n\n          const canvas &#x3D; new WxCanvas(ctx, this.data.canvasId, true, canvasNode)\n          echarts.setCanvasCreator(() &#x3D;&gt; &#123;\n            return canvas\n          &#125;)\n\n          if (typeof callback &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n            this.chart &#x3D; callback(canvas, canvasWidth, canvasHeight, canvasDpr)\n          &#125; else if (this.data.ec &amp;&amp; typeof this.data.ec.onInit &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n            this.chart &#x3D; this.data.ec.onInit(canvas, canvasWidth, canvasHeight, canvasDpr)\n          &#125; else &#123;\n            this.triggerEvent(&#39;init&#39;, &#123;\n              canvas: canvas,\n              width: canvasWidth,\n              height: canvasHeight,\n              dpr: canvasDpr\n            &#125;)\n          &#125;\n        &#125;)\n    &#125;,\n    canvasToTempFilePath(opt) &#123;\n      if (this.data.isUseNewCanvas) &#123;\n        &#x2F;&#x2F; 新版\n        const query &#x3D; wx.createSelectorQuery().in(this)\n        query\n          .select(&#39;.ec-canvas&#39;)\n          .fields(&#123; node: true, size: true &#125;)\n          .exec(res &#x3D;&gt; &#123;\n            const canvasNode &#x3D; res[0].node\n            opt.canvas &#x3D; canvasNode\n            wx.canvasToTempFilePath(opt)\n          &#125;)\n      &#125; else &#123;\n        &#x2F;&#x2F; 旧的\n        if (!opt.canvasId) &#123;\n          opt.canvasId &#x3D; this.data.canvasId;\n        &#125;\n        ctx.draw(true, () &#x3D;&gt; &#123;\n          wx.canvasToTempFilePath(opt, this);\n        &#125;);\n      &#125;\n    &#125;,\n\n    touchStart(e) &#123;\n      if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;\n        var touch &#x3D; e.touches[0];\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mousedown&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.dispatch(&#39;mousemove&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;start&#39;);\n      &#125;\n    &#125;,\n\n    touchMove(e) &#123;\n      if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;\n        var touch &#x3D; e.touches[0];\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mousemove&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;change&#39;);\n      &#125;\n    &#125;,\n\n    touchEnd(e) &#123;\n      if (this.chart) &#123;\n        const touch &#x3D; e.changedTouches ? e.changedTouches[0] : &#123;&#125;;\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mouseup&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.dispatch(&#39;click&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;end&#39;);\n      &#125;\n    &#125;\n  &#125;\n&#125;);\n\nfunction wrapTouch(event) &#123;\n  for (let i &#x3D; 0; i &lt; event.touches.length; ++i) &#123;\n    const touch &#x3D; event.touches[i];\n    touch.offsetX &#x3D; touch.x;\n    touch.offsetY &#x3D; touch.y;\n  &#125;\n  return event;\n&#125;\n\nec-canvas.json文件\n&#123;\n  &quot;component&quot;: true,\n  &quot;usingComponents&quot;: &#123;&#125;\n&#125;\n\nec-canvas.wxss文件\n.ec-canvas &#123;\n  width: 100%;\n  height: 100%;\n&#125;\n\n创建wx-canvas.js文件\nexport default class WxCanvas &#123;\n  constructor(ctx, canvasId, isNew, canvasNode) &#123;\n    this.ctx &#x3D; ctx;\n    this.canvasId &#x3D; canvasId;\n    this.chart &#x3D; null;\n    this.isNew &#x3D; isNew\n    if (isNew) &#123;\n      this.canvasNode &#x3D; canvasNode;\n    &#125;\n    else &#123;\n      this._initStyle(ctx);\n    &#125;\n\n    &#x2F;&#x2F; this._initCanvas(zrender, ctx);\n\n    this._initEvent();\n  &#125;\n\n  getContext(contextType) &#123;\n    if (contextType &#x3D;&#x3D;&#x3D; &#39;2d&#39;) &#123;\n      return this.ctx;\n    &#125;\n  &#125;\n\n  &#x2F;&#x2F; canvasToTempFilePath(opt) &#123;\n  &#x2F;&#x2F;   if (!opt.canvasId) &#123;\n  &#x2F;&#x2F;     opt.canvasId &#x3D; this.canvasId;\n  &#x2F;&#x2F;   &#125;\n  &#x2F;&#x2F;   return wx.canvasToTempFilePath(opt, this);\n  &#x2F;&#x2F; &#125;\n\n  setChart(chart) &#123;\n    this.chart &#x3D; chart;\n  &#125;\n\n  addEventListener() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  attachEvent() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  detachEvent() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  _initCanvas(zrender, ctx) &#123;\n    zrender.util.getContext &#x3D; function () &#123;\n      return ctx;\n    &#125;;\n\n    zrender.util.$override(&#39;measureText&#39;, function (text, font) &#123;\n      ctx.font &#x3D; font || &#39;12px sans-serif&#39;;\n      return ctx.measureText(text);\n    &#125;);\n  &#125;\n\n  _initStyle(ctx) &#123;\n    ctx.createRadialGradient &#x3D; () &#x3D;&gt; &#123;\n      return ctx.createCircularGradient(arguments);\n    &#125;;\n  &#125;\n\n  _initEvent() &#123;\n    this.event &#x3D; &#123;&#125;;\n    const eventNames &#x3D; [&#123;\n      wxName: &#39;touchStart&#39;,\n      ecName: &#39;mousedown&#39;\n    &#125;, &#123;\n      wxName: &#39;touchMove&#39;,\n      ecName: &#39;mousemove&#39;\n    &#125;, &#123;\n      wxName: &#39;touchEnd&#39;,\n      ecName: &#39;mouseup&#39;\n    &#125;, &#123;\n      wxName: &#39;touchEnd&#39;,\n      ecName: &#39;click&#39;\n    &#125;];\n    eventNames.forEach(name &#x3D;&gt; &#123;\n      this.event[name.wxName] &#x3D; e &#x3D;&gt; &#123;\n        const touch &#x3D; e.touches[0];\n        this.chart.getZr().handler.dispatch(name.ecName, &#123;\n          zrX: name.wxName &#x3D;&#x3D;&#x3D; &#39;tap&#39; ? touch.clientX : touch.x,\n          zrY: name.wxName &#x3D;&#x3D;&#x3D; &#39;tap&#39; ? touch.clientY : touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n      &#125;;\n    &#125;);\n  &#125;\n\n  set width(w) &#123;\n    if (this.canvasNode) this.canvasNode.width &#x3D; w\n  &#125;\n  set height(h) &#123;\n    if (this.canvasNode) this.canvasNode.height &#x3D; h\n  &#125;\n\n  get width() &#123;\n    if (this.canvasNode)\n      return this.canvasNode.width\n    return 0\n  &#125;\n  get height() &#123;\n    if (this.canvasNode)\n      return this.canvasNode.height\n    return 0\n  &#125;\n&#125;\n以上代码均来自： echarts-for-weixin\n2.使用组件这里用this._chart的方式记录echarts实例，用于后续动态刷新\n&lt;ec-canvas\n    id&#x3D;&quot;line&quot;\n    type&#x3D;&quot;2d&quot;\n    canvas-id&#x3D;&quot;line&quot;\n    ec&#x3D;&quot;&#123;&#123;lineEC&#125;&#125;&quot;\n&gt;&lt;&#x2F;ec-canvas&gt;\nimport * as echarts from &#39;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts&#39;;\n\nPage(&#123;\n    data: &#123;\n        lineEC:&#123;\n          lazyLoad: true\n        &#125;,\n    &#125;,\n    &#x2F;&#x2F;绘制折线图\n    drawLine(dataList) &#123;\n        let xAxis &#x3D; [], series &#x3D; [];\n        const _dataList &#x3D; dataList.map((item,idx) &#x3D;&gt; &#123;\n            if(this.data.legendList.length &#x3D;&#x3D;&#x3D; 0) &#123;\n                item.color &#x3D; this.data._baseColor[idx];\n            &#125;else &#123;\n                item.color &#x3D; this.data.legendList.find(item2 &#x3D;&gt; item2.name &#x3D;&#x3D;&#x3D; item.name).color;\n            &#125;\n\n            if(item.active &#x3D;&#x3D;&#x3D; undefined) &#123;\n                item.active &#x3D; true;   &#x2F;&#x2F;是否激活\n            &#125;\n            xAxis &#x3D; item.data.map(item2 &#x3D;&gt; formatterDate(new Date(item2.time), &#39;HH:mm:ss&#39;));\n            series.push(&#123;\n                ...item,\n                type: &#39;line&#39;,\n                lineStyle: &#123;\n                    color: item.color\n                &#125;,\n                symbol: &#39;none&#39;,\n                data: item.data.map(item2 &#x3D;&gt; item2.value)\n            &#125;);\n            return item;\n        &#125;);\n        if(this.data.legendList.length &#x3D;&#x3D;&#x3D; 0) &#123;\n            this.setData(&#123;\n                legendList: _dataList\n            &#125;);\n        &#125;\n\n        this.selectComponent(&quot;#line&quot;).init((canvas, width, height, dpr) &#x3D;&gt; &#123;\n            let chart &#x3D; this._chart;\n            if(!this._chart) &#123;\n                chart &#x3D; echarts.init(canvas, null, &#123;\n                    width: width,\n                    height: height,\n                    devicePixelRatio: dpr\n                &#125;);\n                this._chart &#x3D; chart;\n            &#125;\n            canvas.setChart(chart);\n            chart.setOption(&#123;\n                tooltip: &#123;\n                    trigger: &#39;axis&#39;,\n                    formatter: function(params) &#123;\n                        let str &#x3D; &#96;$&#123;dataList[0].data[params[0].dataIndex].time&#125;\\n&#96;;\n                        params.forEach((item, idx) &#x3D;&gt; &#123;\n                            str +&#x3D; &#96;$&#123;item.marker&#125; $&#123;item.seriesName&#125;：$&#123;item.value&#125;$&#123;dataList[item.seriesIndex].unit&#125;&#96;;\n                            if(idx &lt; params.length - 1) str +&#x3D; &#39;\\n&#39;;\n                        &#125;);\n                        return str;\n                    &#125;,\n                    position: function (point, params, dom, rect, size) &#123;\n                        var x &#x3D; 0; &#x2F;&#x2F; x坐标位置\n                        var y &#x3D; 0; &#x2F;&#x2F; y坐标位置\n\n                        &#x2F;&#x2F; 当前鼠标位置\n                        var pointX &#x3D; point[0];\n                        var pointY &#x3D; point[1];\n\n                        &#x2F;&#x2F; 外层div大小\n                        var viewWidth &#x3D; size.viewSize[0];\n                        var viewHeight &#x3D; size.viewSize[1];\n\n                        &#x2F;&#x2F; 提示框大小\n                        var boxWidth &#x3D; size.contentSize[0];\n                        var boxHeight &#x3D; size.contentSize[1];\n                        if(pointX &lt; viewWidth &#x2F; 2) &#123;\n                            x &#x3D; pointX + 5;\n                        &#125;else &#123;\n                            x &#x3D; pointX - boxWidth - 5;\n                        &#125;\n\n                        &#x2F;&#x2F; boxHeight &gt; pointY 说明鼠标上边放不下提示框\n                        if (boxHeight &gt; pointY) &#123;\n                            y &#x3D; 5;\n                        &#125; else &#123; &#x2F;&#x2F; 上边放得下\n                            y &#x3D; pointY - boxHeight;\n                        &#125;\n                        return [x, y];\n                    &#125;\n                &#125;,\n                grid: &#123;\n                    top: &#39;10%&#39;,\n                    left: &#39;3%&#39;,\n                    right: &#39;4%&#39;,\n                    bottom: &#39;50%&#39;,\n                    containLabel: true\n                &#125;,\n                xAxis: &#123;\n                    type: &#39;category&#39;,\n                    boundaryGap: false,\n                    data: xAxis\n                &#125;,\n                yAxis: &#123;\n                    type: &#39;value&#39;\n                &#125;,\n                series\n            &#125;,true);\n            return chart;\n        &#125;);\n    &#125;\n&#125;);\n&#123;\n  ...\n  &quot;usingComponents&quot;: &#123;\n    &quot;ec-canvas&quot;: &quot;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;ec-canvas&quot;\n  &#125;\n&#125;\n\n3.接入社区插件 实例为水球图将对应echarts版本的插件文件放入到文件夹中，例如echarts-liquidfill.js\n在js中引入对应插件即可使用\nimport * as liquidFill from &#39;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts-liquidfill&#39;;\nimport * as echarts from &#39;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts&#39;;\n\n&#x2F;**\n  * 项目右洞图表绘制\n  *&#x2F;\ndrawJcChart3(data) &#123;\n    wx.nextTick(() &#x3D;&gt; &#123;\n        this.selectComponent(&quot;#jc-chart3&quot;).init((canvas, width, height, dpr) &#x3D;&gt; &#123;\n            let chart &#x3D; echarts.init(canvas, null, &#123;\n                width: width,\n                height: height,\n                devicePixelRatio: dpr &#x2F;&#x2F; new\n            &#125;);\n            canvas.setChart(chart);\n            chart.setOption(this.getJcChartOptions(data, &quot;#4DF59B&quot;, &#39;#1DCDA5&#39;, &#39;#94fce4&#39;, &#39;#043526&#39;));\n            return chart;\n        &#125;);\n    &#125;);\n&#125;,\n&#x2F;**\n  * 获取水球图表配置\n  *&#x2F;\ngetJcChartOptions: function (data, color1, color2, color3, color4) &#123;\n    return &#123;\n        series: [\n            &#123;\n                &#x2F;&#x2F; value: 50, &#x2F;&#x2F;  内容 配合formatter\n                type: &#39;liquidFill&#39;,\n                radius: &#39;95%&#39;, &#x2F;&#x2F; 控制中间圆球的尺寸（此处可以理解为距离外圈圆的距离控制）\n                center: [&#39;50%&#39;, &#39;50%&#39;],\n                data: [\n                   &#123;\n                        value: data,\n                        itemStyle: &#123;\n                            shadowBlur: 10\n                        &#125;\n                    &#125;,\n                    &#123;\n                        value: data - 0.03,\n                        direction: &#39;left&#39;, &#x2F;&#x2F;波浪方向\n                        itemStyle: &#123;\n                            shadowBlur: 10\n                        &#125;\n                    &#125;,\n                ], &#x2F;&#x2F; data个数代表波浪数\n                backgroundStyle: &#123;\n                    borderWidth: 0,\n                    color: color3, &#x2F;&#x2F; 球体本景色\n                &#125;,\n                amplitude: &#39;6  %&#39;, &#x2F;&#x2F;波浪的振幅\n                color: [&#123;\n                    type: &#39;linear&#39;,\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [&#123;\n                        offset: 1,\n                        color: color1,\n                    &#125;,\n                    &#123;\n                        offset: 0,\n                        color: color2,\n                    &#125;],\n                    globalCoord: false,\n                &#125;,],\n                label: &#123;\n                    normal: &#123;\n                        formatter: Math.round(data * 100 * 100) &#x2F; 100 + &#39;&#123;d|%&#125;&#39;,\n                        rich: &#123;\n                            d: &#123;\n                                fontSize: 18,\n                            &#125;,\n                        &#125;,\n                        textStyle: &#123;\n                            fontSize: 18,\n                            color: color4,\n                        &#125;,\n                    &#125;,\n                &#125;,\n                outline: &#123;\n                    show: false,\n                &#125;, \n            &#125;\n        ]\n    &#125;;\n&#125;,","slug":"小程序嵌入Echarts/index","date":"2022-10-07T16:00:00.000Z","categories_index":"小程序","tags_index":"小程序,Echarts,组件引入","author_index":"Life Experiencer"},{"id":"d2b1c86d84778284c9a48f05cbcb4fb9","title":"uni-app开发小程序 bug记录","content":"使用uView组件u-datetime-picker组件渲染失效\n\n\n\n\n\n\n\n\n\n使用该组件时，如果以任何方式配置cancel事件，会导致组件渲染失败需要如下添加两条属性，并且值不能为官方默认值，否则依旧会渲染失败\n\n无法穿透至组件内部修改样式\n\n\n\n\n\n\n\n\n需要在methods同级位置添加代码\noptions: &#123; styleIsolation: &#39;shared&#39; &#125;\n\n\n字体文件在工具中报错\n官方文档链接\n选择器*不能使用\n\n\n\n\n\n\n\n\nuni-app不支持*选择器\nucharts使用时绘制层级问题\n\n\n\n\n\n\n\n\n必须添加:canvas2d=&quot;true&quot;属性\n\n","slug":"uni-app开发小程序-bug记录/index","date":"2022-08-22T16:00:00.000Z","categories_index":"bug","tags_index":"bug,uni-app","author_index":"Life Experiencer"},{"id":"0e3018629513531f8d065044c5f51d64","title":"搭建Express框架","content":"Create ProjectExpress 中文网\nStart Serve$ npm start\n\n$ $env:DEBUG&#x3D;&#39;myapp:*&#39;; npm start\n\nChange View Engine To Html$ npm install ejs --save\n\napp.js\nvar ejs &#x3D; require(&#39;ejs&#39;);\n\n&#x2F;&#x2F; app.set(&#39;view engine&#39;, &#39;jade&#39;);\napp.engine(&#39;.html&#39;, ejs.__express) &#x2F;&#x2F; 设置视图引擎后缀，为.html\napp.set(&#39;view engine&#39;, &#39;html&#39;);     &#x2F;&#x2F; 设置视图引擎为html\n\n\n\n\n\n\n\n\n\n\n删除.jade文件 新建.html文件\nHot Update$ npm install -g node-dev\n或\n$ npm install node-dev -D\n\npackage.json\n&#123;\n  &quot;scripts&quot;: &#123;\n    &quot;dev&quot;: &quot;node-dev .&#x2F;bin&#x2F;www&quot;\n  &#125;\n&#125;\n\n$ npm run dev&#96;","slug":"Express搭建/index","date":"2022-08-02T16:00:00.000Z","categories_index":"环境搭建及配置","tags_index":"环境搭建及配置,node.js,Express","author_index":"Life Experiencer"},{"id":"859c08d30a5499f1a412de01ef363b3c","title":"使用VS Code开发uni-app","content":"Project info\n\n\n\n\n\n\n\n\n编辑器：VS Code框架：uni-app\nProject create\n\n\n\n\n\n\n\n\n使用npm搭配vue-cli\n$ vue create -p dcloudio&#x2F;uni-preset-vue &#39;project name&#39;\n\nProject setup在package.json中添加配置\n&quot;scripts&quot;: &#123;\n    &quot;devDependencies&quot;: &#123;\n        &quot;sass&quot;: &quot;^1.49.8&quot;,          &#x2F;&#x2F; 如使用其他版本可能因为版本过高导致启动服务失败\n        &quot;sass-loader&quot;: &quot;^8.0.2&quot;,    &#x2F;&#x2F; 如使用其他版本可能因为版本过高导致启动服务失败\n    &#125;\n&#125;\n\n$ npm install\n\nuView-ui推荐通过HBuilderX引入插件方式添加\n在package.json中添加配置\n&quot;scripts&quot;: &#123;\n  &quot;serve:wx&quot;: &quot;npm run dev:mp-weixin&quot;,\n  &quot;dev:mp-weixin&quot;: &quot;cross-env NODE_ENV&#x3D;development UNI_PLATFORM&#x3D;mp-weixin vue-cli-service uni-build --watch&quot;,\n&#125;\n\n\n\nProject run$ npm run serve:wx\n\n在微信开发者工具导入项目:路径为dist\\dev\\mp-weixin即可热更新\nVS Code 开发插件uni-app-schemas\n\n\n\n\n\n\n\n\n校验 uni-app 中的 androidPrivacy.json、pages.json 和 manifest.json 格式\nuni-app-snippets\n\n\n\n\n\n\n\n\nuni-app 基本能力代码片段\nuni-create-view\n\n\n\n\n\n\n\n\n快速创建uniapp视图与组件可以创建分包组件\n","slug":"使用VSCode开发uni-app/index","date":"2022-08-02T16:00:00.000Z","categories_index":"环境搭建及配置","tags_index":"环境搭建及配置,uni-app,VS Code","author_index":"Life Experiencer"},{"id":"c6ed01f79789c67a9afc63759dd9592c","title":"wx小程序 bug记录","content":"\n\n\n\n\n\n\n注意！\n遇到所有问题，先在真机跑一下，说不定好了\n\n微信小程序webview两次返回问题1.下载SDK文件概述 | 微信开放文档 (qq.com\n2.在H5页面中引入SDK文件加入如下逻辑即可\nmounted() &#123;\n    history.pushState(&#123;page: 1&#125;, null, window.location.href);\n    &#x2F;&#x2F;然后监听popstate事件\n    window.addEventListener(&#39;popstate&#39;, (event) &#x3D;&gt; &#123;\n        wx.miniProgram.navigateBack();\n    &#125;);\n&#125;\n\nbackground-size不生效view &#123;\n    background: url(&#39;xxx.png&#39;) no-repeat;\n    background-size: 100% 100%;\n&#125;\n如此写法时，background-size不会生效，要使用background-image属性声明背景图片\nview &#123;\n    background-image: url(&#39;xxx.png&#39;);\n    background-repeat: no-repeat;\n    background-size: 100% 100%;\n&#125;\n\nEcharts不显示使用Echarts绘制canvas时，必须给其父级盒子声明宽高，并且此view中不能拥有其他挤占宽高的元素\n&lt;view class&#x3D;&quot;chart-box&quot;&gt;\n\t&lt;ec-canvas ...&gt;&lt;&#x2F;ec-canvas&gt;\n&lt;&#x2F;view&gt;\n.chart-box &#123;\n    width: 100rpx;\n    height: 100rpx;\n&#125;\n\nEcharts层级问题\n\n\n\n\n\n提示\n首先确认：打开手机扫码确认问题在真机也会同时出现\n\n使用canvas时，层级会自动置于最高，解决办法：给canvas元素增加属性type=&quot;2d&quot;Echarts文档中写明，如不配置force-use-old-canvas=&quot;true&quot;的情况下，只要用户的基础库版本 &gt;&#x3D; 2.9.0，会自动为其中的canvas添加该属性，但效果显示并非如此通过翻看源码查到，如果添加isUseNewCanvas，会使用新版canvas，但结果也并非如此，于是尝试更改源码，将其中的ec-canvas.js文件中的data.isUseNewCanvas改为true得以解决\n\n给组件使用hidden属性时失效组件的hidden显示要使用view套一层，控制外层view的hidden\n引入字体wx.loadFontFace(&#123;\n    family: &#39;zhenyan&#39;,\n    source: &quot;url(&#39;https:&#x2F;&#x2F;xxx&#x2F;zhenyan.ttf&#39;)&quot;,\n    global: true\n&#125;)\n\n\n\n\n\n\n\n\n注意\nscopes: native配置后wxss文件中会失效app.js文件中引用无效\n\n小程序canvas绘制最新版本和web语法一致，但ctx对象需要如下操作\nlet query &#x3D; wx.createSelectorQuery().in(this);\nquery.select(&#39;#canvas&#39;).fields(&#123;\n    node: true,\n    size: true\n&#125;).exec(resp &#x3D;&gt; &#123;\n    const width &#x3D; resp[0].width;\n    const height &#x3D; resp[0].height;\n    let canvas &#x3D; resp[0].node;\n    let ctx &#x3D; canvas.getContext(&#39;2d&#39;);\n    let dpr &#x3D; wx.getSystemInfoSync().pixelRatio;\n    canvas.width &#x3D; width * dpr;\n    canvas.height &#x3D; height * dpr;\n\n    &#x2F;&#x2F; 绘制逻辑\n&#125;);\n\nwx.getUserProfile()接口调用不报错直接进入faildesc属性必填，且不可过长\nvant组件引入后不生效尝试重启编译器，引入未使用过的组件，第一次渲染不会生效\n背景图片时而可以用静态地址，时而不行经测试，怀疑是过大的图片文件不可以用静态地址解决方式：换用image元素做背景\n","slug":"wx小程序-bug记录/index","date":"2022-07-29T16:00:00.000Z","categories_index":"bug","tags_index":"bug,wx小程序","author_index":"Life Experiencer"},{"id":"77f748c7cea4ef5fb4d783ef512007b4","title":"前端压缩","content":"1.引入JSZip&lt;script src&#x3D;&quot;jszip.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;jszip-utils.js&quot;&gt;&lt;&#x2F;script&gt;\n\njszip.jsjszip-utils.js\n2.封装工具类&#x2F;**\n * 压缩\n * @param file 文件 类型为：File &#x2F; FileList\n * @param packageName 压缩包名称\n *&#x2F;\nfunction compressFiles(files, packageName) &#123;\n    let zip &#x3D; new JSZip();\n    &#x2F;&#x2F; 如果类型为File\n    if (Object.prototype.toString.call(files) &#x3D;&#x3D;&#x3D; &#39;[object File]&#39;) &#123;\n        let reader &#x3D; new FileReader();\n        reader.readAsArrayBuffer(files);\n        reader.addEventListener(&quot;loadend&quot;, function(e) &#123;\n            let blob &#x3D; new Blob([e.target.result], &#123; type: file.type &#125;);\n            zip.file(file.name, blob);\n            zip.generateAsync(&#123; type: &quot;blob&quot; &#125;).then(bl &#x3D;&gt; &#123;\n                saveAs(bl, packageName);\n            &#125;);\n        &#125;);\n    &#x2F;&#x2F; 如果类型为FileList\n    &#125; else if (Object.prototype.toString.call(files) &#x3D;&#x3D;&#x3D; &#39;[object FileList]&#39;) &#123;\n        let reader &#x3D; new FileReader();\n        let i &#x3D; 0;\n        &#x2F;&#x2F; 递归读取流\n        reader.addEventListener(&quot;loadend&quot;, function(e) &#123;\n            &#x2F;&#x2F; 读取后的流写入zip中\n            let blob &#x3D; new Blob([e.target.result], &#123; type: files[i].type &#125;);\n            zip.file(files[i].name, blob);\n            if (i &#x3D;&#x3D;&#x3D; Object.keys(files).length - 1) &#123;\n                &#x2F;&#x2F; 如果全部压缩后，下载\n                zip.generateAsync(&#123; type: &quot;blob&quot; &#125;).then(bl &#x3D;&gt; &#123;\n                    saveAs(bl, packageName);\n                &#125;);\n            &#125; else &#123;\n                reader.readAsArrayBuffer(files[++i]);\n            &#125;\n        &#125;);\n        reader.readAsArrayBuffer(files[i]);\n    &#125;\n&#125;\n\n&#x2F;**\n * 解压本地文件\n * @param file 压缩文件\n * @param callback 解压后的回调函数 参数分别为文件路径和文件\n *&#x2F;\nfunction uncompressNative(file, callback) &#123;\n    JSZip.loadAsync(file).then(function(zip) &#123;\n        zip.forEach((path, file) &#x3D;&gt; &#123;\n            callback(path, file);\n        &#125;);\n    &#125;, function() &#123;\n        console.error(&#39;解压失败&#39;);\n    &#125;);\n&#125;\n\n&#x2F;**\n * 解压线上文件\n * @param path \n * @param callback 解压后的回调 参数为单个文件\n *&#x2F;\nfunction uncompressOnline(path, callback) &#123;\n    let promise &#x3D; new JSZip.external.Promise(function (resolve, reject) &#123;\n        JSZipUtils.getBinaryContent(path, function(err, data) &#123;\n            if (err) &#123;\n                reject(err);\n            &#125; else &#123;\n                resolve(data);\n            &#125;\n        &#125;);\n    &#125;);\n    promise.then(JSZip.loadAsync)\n    .then(function(zip) &#123;\n        for (key in zip.files) &#123;\n            zip.file(key).async(&quot;blob&quot;).then(blob &#x3D;&gt; &#123;\n                let file &#x3D; new File([blob], zip.files[key].name);\n                callback(file);\n            &#125;);\n        &#125;\n    &#125;)\n    .then(function success(text) &#123;\n        \n    &#125;, function error(e) &#123;\n        \n    &#125;);\n&#125;\n\n&#x2F;**\n * 下载\n * @param blob 文件二进制流\n * @param filename 文件名称\n *&#x2F;\nfunction saveAs(blob, filename) &#123;\n    if (window.navigator.msSaveOrOpenBlob) &#123;\n        navigator.msSaveBlob(blob, filename);\n    &#125; else &#123;\n        var link &#x3D; document.createElement(&#39;a&#39;);\n        var body &#x3D; document.querySelector(&#39;body&#39;);\n\n        link.href &#x3D; window.URL.createObjectURL(blob);\n        link.download &#x3D; filename;\n\n        &#x2F;&#x2F; fix Firefox\n        link.style.display &#x3D; &#39;none&#39;;\n        body.appendChild(link);\n\n        link.click();\n        body.removeChild(link);\n\n        window.URL.revokeObjectURL(link.href);\n    &#125;;\n&#125;","slug":"前端压缩/index","date":"2022-07-01T16:00:00.000Z","categories_index":"工具类","tags_index":"压缩","author_index":"Life Experiencer"},{"id":"ee1781b2ca281272a7524c04a8bacf0a","title":"前端导出","content":"1.引入工具类&lt;script lang&#x3D;&quot;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.sheetjs.com&#x2F;xlsx-0.18.7&#x2F;package&#x2F;dist&#x2F;xlsx.full.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n(官方文档)[https://github.com/SheetJS/sheetjs]\n2.封装导出&#x2F;&#x2F; 导出按钮点击事件\nfunction onExportClick(dataSrc) &#123;\n    var listdata &#x3D; dataSrc;\n    var typeList &#x3D; [];  &#x2F;&#x2F; 记录录入的类型\n    var tableData &#x3D; [];&#x2F;&#x2F;表格数据\n    var titleRow &#x3D; [&quot;突发事件处置表&quot;]; &#x2F;&#x2F; 标题行\n    var secondRow &#x3D; [&quot;日期&quot;];\n    var thirdRow &#x3D; [&quot;&quot;];\n    var data &#x3D; [];\n    \n    listdata.forEach(item &#x3D;&gt; &#123;\n        if (secondRow.indexOf(item.EventParentTypeName) &#x3D;&#x3D; -1) &#123;\n            secondRow.push(item.EventParentTypeName, &quot;&quot;);\n            typeList.push(item.EventParentTypeId);\n        &#125;\n    &#125;);\n    \n    secondRow.push(&quot;发布情报板（条）&quot;);\n    \n    for (var i &#x3D; 0; i &lt; typeList.length; i++) &#123;\n        thirdRow.push(&quot;次数&quot;, &quot;时长(min)&quot;);\n    &#125;\n    thirdRow.push(&quot;&quot;);\n    tableData.push(titleRow, secondRow, thirdRow);\n    \n    &#x2F;&#x2F; 组装数据成对象数组\n    var dataObjList &#x3D; [];\n    listdata.forEach(item &#x3D;&gt; &#123;\n        var time &#x3D; item.EventReportDate;\n        time +&#x3D; item.Shift &#x3D;&#x3D; 1 ? &quot;（白班）&quot; : &quot;（夜班）&quot;;\n        var index &#x3D; dataObjList.findIndex(e &#x3D;&gt; e.time &#x3D;&#x3D; time);\n        if (index &#x3D;&#x3D; -1) &#123;\n            dataObjList.push(&#123;\n                time,\n                count: item.InfoBoardNumber,\n                list: [&#123;\n                    times: item.EventNumber,\n                    duration: item.Duration,\n                    id: item.EventParentTypeId\n                &#125;]\n            &#125;);\n        &#125; else &#123;\n            dataObjList[index].count +&#x3D; item.InfoBoardNumber;\n            dataObjList[index].list.push(&#123;\n                times: item.EventNumber,\n                duration: item.Duration,\n                id: item.EventParentTypeId\n            &#125;);\n        &#125;\n    &#125;);\n    &#x2F;&#x2F; 将对象数组转为对应格式\n    dataObjList.forEach(item &#x3D;&gt; &#123;\n        data.push(item.time);\n        typeList.forEach(id &#x3D;&gt; &#123;\n            var index &#x3D; item.list.findIndex(e &#x3D;&gt; e.id &#x3D;&#x3D; id);\n            if (index &#x3D;&#x3D; -1) &#123;\n                data.push(&quot;&quot;, &quot;&quot;);\n            &#125; else &#123;\n                data.push(item.list[index].times, item.list[index].duration);\n            &#125;\n        &#125;);\n        data.push(item.count);\n        tableData.push(data);\n        data &#x3D; [];\n    &#125;);\n    \n    var sheet &#x3D; XLSX.utils.aoa_to_sheet(tableData, &#123; raw: true &#125;);\n    &#x2F;&#x2F; 配置跨行跨列\n    merge &#x3D; [\n        &#123; \n            s: &#123; r: 0, c: 0 &#125;, \n            e: &#123; r: 0, c: secondRow.length &#125; \n        &#125;,\n        &#123;\n            s: &#123; r: 1, c: 0&#125;,\n            e: &#123; r: 2, c: 0&#125;\n        &#125;\n    ];\n    for (var i &#x3D; 0; i &lt; typeList.length; i++) &#123;\n        merge.push(\n            &#123;\n                s: &#123; r: 1, c: 2 * i + 1&#125;,\n                e: &#123; r: 1, c: 2 * i + 2&#125;\n            &#125;\n        );\n    &#125;\n    sheet[&#39;!merges&#39;] &#x3D; merge;\n    saveAs(sheet2blob(sheet), &#39;突发事件处置表&#39; + formatDate(new Date(), &quot;yyyy-MM-dd&quot;) + &#39;.xlsx&#39;);\n&#125;\n\n&#x2F;&#x2F; 导出表格\nfunction saveAs(blob, filename) &#123;\n    if (window.navigator.msSaveOrOpenBlob) &#123;\n        navigator.msSaveBlob(blob, filename);\n    &#125; else &#123;\n        var link &#x3D; document.createElement(&#39;a&#39;);\n        var body &#x3D; document.querySelector(&#39;body&#39;);\n\n        link.href &#x3D; window.URL.createObjectURL(blob);\n        link.download &#x3D; filename;\n\n        &#x2F;&#x2F; fix Firefox\n        link.style.display &#x3D; &#39;none&#39;;\n        body.appendChild(link);\n\n        link.click();\n        body.removeChild(link);\n\n        window.URL.revokeObjectURL(link.href);\n    &#125;;\n&#125;\n\nfunction sheet2blob(sheet, sheetName) &#123;\n    sheetName &#x3D; sheetName || &#39;sheet1&#39;;\n    var workbook &#x3D; &#123;\n        SheetNames: [sheetName],\n        Sheets: &#123;&#125;\n    &#125;;\n    workbook.Sheets[sheetName] &#x3D; sheet;\n    &#x2F;&#x2F; 生成excel的配置项\n    var wopts &#x3D; &#123;\n        bookType: &#39;xlsx&#39;, &#x2F;&#x2F; 要生成的文件类型\n        bookSST: false, &#x2F;&#x2F; 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性\n        type: &#39;binary&#39;\n    &#125;;\n    var wbout &#x3D; XLSX.write(workbook, wopts);\n    var blob &#x3D; new Blob([s2ab(wbout)], &#123; type: &quot;application&#x2F;octet-stream&quot; &#125;);\n    &#x2F;&#x2F; 字符串转ArrayBuffer\n    function s2ab(s) &#123;\n        var buf &#x3D; new ArrayBuffer(s.length);\n        var view &#x3D; new Uint8Array(buf);\n        for (var i &#x3D; 0; i !&#x3D; s.length; ++i) view[i] &#x3D; s.charCodeAt(i) &amp; 0xFF;\n        return buf;\n    &#125;\n    return blob;\n&#125;\n\n&#x2F;&#x2F;格式化日期,\nfunction formatDate(date, format) &#123;\n    var paddNum &#x3D; function (num) &#123;\n        num +&#x3D; &quot;&quot;;\n        return num.replace(&#x2F;^(\\d)$&#x2F;, &quot;0$1&quot;);\n    &#125;\n    &#x2F;&#x2F;指定格式字符\n    var cfg &#x3D; &#123;\n        yyyy: date.getFullYear() &#x2F;&#x2F;年 : 4位\n        , yy: date.getFullYear().toString().substring(2)&#x2F;&#x2F;年 : 2位\n        , M: date.getMonth() + 1  &#x2F;&#x2F;月 : 如果1位的时候不补0\n        , MM: paddNum(date.getMonth() + 1) &#x2F;&#x2F;月 : 如果1位的时候补0\n        , d: date.getDate()   &#x2F;&#x2F;日 : 如果1位的时候不补0\n        , dd: paddNum(date.getDate())&#x2F;&#x2F;日 : 如果1位的时候补0\n        , hh: date.getHours()  &#x2F;&#x2F;时\n        , mm: date.getMinutes() &#x2F;&#x2F;分\n        , ss: date.getSeconds() &#x2F;&#x2F;秒\n    &#125;\n    format || (format &#x3D; &quot;yyyy-MM-dd hh:mm:ss&quot;);\n    return format.replace(&#x2F;([a-z])(\\1)*&#x2F;ig, function (m) &#123; return cfg[m]; &#125;);\n&#125;\n\n\n\n\n\n\n\n提示\n原场景中的dataSrc如下\n\n\n&#x2F;&#x2F; 原始数据 （原场景为ajax请求获取到的数据）\nvar dataSrc &#x3D; [\n    &#123;\n        &quot;Shift&quot;: 1,\n        &quot;EventReportDate&quot;: &quot;2022-04-25&quot;,\n        &quot;EventParentTypeId&quot;: 12,\n        &quot;EventParentTypeName&quot;: &quot;测试事件&quot;,\n        &quot;EventNumber&quot;: 5,\n        &quot;Duration&quot;: 0.0,\n        &quot;InfoBoardNumber&quot;: 0\n    &#125;,\n    &#123;\n        &quot;Shift&quot;: 1,\n        &quot;EventReportDate&quot;: &quot;2022-04-26&quot;,\n        &quot;EventParentTypeId&quot;: 12,\n        &quot;EventParentTypeName&quot;: &quot;测试事件&quot;,\n        &quot;EventNumber&quot;: 3,\n        &quot;Duration&quot;: 0.0,\n        &quot;InfoBoardNumber&quot;: 0\n    &#125;,\n    &#123;\n        &quot;Shift&quot;: 1,\n        &quot;EventReportDate&quot;: &quot;2022-04-27&quot;,\n        &quot;EventParentTypeId&quot;: 12,\n        &quot;EventParentTypeName&quot;: &quot;测试事件&quot;,\n        &quot;EventNumber&quot;: 4,\n        &quot;Duration&quot;: 0.0,\n        &quot;InfoBoardNumber&quot;: 0\n    &#125;,\n    &#123;\n        &quot;Shift&quot;: 2,\n        &quot;EventReportDate&quot;: &quot;2022-04-27&quot;,\n        &quot;EventParentTypeId&quot;: 12,\n        &quot;EventParentTypeName&quot;: &quot;测试事件&quot;,\n        &quot;EventNumber&quot;: 2,\n        &quot;Duration&quot;: 0.0,\n        &quot;InfoBoardNumber&quot;: 0\n    &#125;,\n    &#123;\n        &quot;Shift&quot;: 1,\n        &quot;EventReportDate&quot;: &quot;2022-04-29&quot;,\n        &quot;EventParentTypeId&quot;: 1,\n        &quot;EventParentTypeName&quot;: &quot;天气事件&quot;,\n        &quot;EventNumber&quot;: 8,\n        &quot;Duration&quot;: 33001.634283333333,\n        &quot;InfoBoardNumber&quot;: 4\n    &#125;\n];","slug":"前端导出/index","date":"2022-07-01T16:00:00.000Z","categories_index":"工具类","tags_index":"导出","author_index":"Life Experiencer"},{"id":"e731b129ad8438b546830de537cc0a95","title":"Web基础 bug记录","content":"使用iFrame时，内嵌页面出现滚动条且高度不对\n\n\n\n\n\n\n\n\n原因：和img出现在div时一致，因为iFrame是行内元素，基线原因导致\n","slug":"Web基础-bug记录/index","date":"2022-05-16T16:00:00.000Z","categories_index":"bug","tags_index":"bug,web前端基础","author_index":"Life Experiencer"},{"id":"bec3eed037605986e82f30f910c0b6ea","title":"layui bug记录","content":"首次加载弹框时，背景闪白问题\n\n\n\n\n\n\n\n\n原因：源码layui.css中，存在样式：\n.layui-layer-load &#123;\n    background: url(loading-1.gif) center center no-repeat #eee;\n&#125;\n\n\n\n\n\n\n\n\n\n\n修改样式中颜色即可\n.layui-layer-load &#123;\n    background: url(loading-1.gif) center center no-repeat rgba(0, 0, 0, .2);\n&#125;","slug":"layui-bug记录/index","date":"2022-04-13T16:00:00.000Z","categories_index":"bug","tags_index":"bug,layui","author_index":"Life Experiencer"},{"id":"77cefb5fd0cde76aa6ec39dbc2ce3657","title":"ajax发送文件","content":"const sendFormData &#x3D; function() &#123;\n    const file &#x3D; new File();\n    const form &#x3D; new FormData();\n    form.append(&#39;fileData&#39;, file, &#39;文件名.xlsx&#39;);\n    form.append(&#39;id&#39;, 0);\n\n    $.ajax(&#123;\n        url: &#39;&#x2F;xxx&#39;,\n        type: &#39;POST&#39;,\n        data: form,\n        processData: false, &#x2F;&#x2F; 告诉jQuery不要处理发送的数据\n        contentType: false, &#x2F;&#x2F; 告诉jQuery不要设置content-type请求头\n    &#125;).then(res &#x3D;&gt; &#123;\n        \n    &#125;);\n&#125;","slug":"ajax发送文件/index","date":"2021-09-12T16:00:00.000Z","categories_index":"jQuery","tags_index":"jQuery,前后端交互,ajax","author_index":"Life Experiencer"},{"id":"fd888ffbf7087b4ba83a165597c715b7","title":"Element bug记录","content":"Element.ui使用el-tree组件，一键展开或关闭expandAll() &#123;\n    for (let key in this.$refs.tree.store.nodesMap) &#123;\n        this.$refs.tree.store.nodesMap[key].expanded &#x3D; true;\n    &#125;\n&#125;\n\n\n\n\n\n\n\n注意\n  需要在el-tree组件上添加属性node-key=&quot;id&quot;，用以生成NodesMap，才可以进行遍历\n\nel-upload上传标签改变大小* &#123;\n    --uploadWidth: 70px;\n&#125;\n\n.el-upload--picture-card &#123;\n    width: var(--uploadWidth);\n    height: var(--uploadWidth);\n&#125;\n\n.el-upload &#123;\n    width: var(--uploadWidth);\n    height: var(--uploadWidth);\n    line-height: var(--uploadWidth);\n&#125;\n\n.el-upload-list--picture-card .el-upload-list__item &#123;\n    width: var(--uploadWidth);\n    height: var(--uploadWidth);\n    line-height: var(--uploadWidth);\n&#125;\n\n.el-upload-list--picture-card .el-upload-list__item-thumbnail &#123;\n    width: var(--uploadWidth);\n    height: var(--uploadWidth);\n    line-height: var(--uploadWidth);\n&#125;\n\n.avatar &#123;\n    width: var(--uploadWidth);\n    height: var(--uploadWidth);\n&#125;\n\nElement Plus\n\n\n\n\n\n提示\n  暂无\n\n","slug":"Element-bug记录/index","date":"2021-08-16T16:00:00.000Z","categories_index":"bug","tags_index":"bug,element","author_index":"Life Experiencer"},{"id":"2d463effdc98de85ee0a0b453c60fead","title":"Vue bug记录","content":"Vue2进入页面默认查找动态生成的内容，查找结果为空\n\n\n\n\n\n\n\n\n首先，查找元素应该在mounted生命周期中，因为此时页面已经完成渲染，其次，动态生成的元素，如果其数据是异步获取，应该在获取到以后，进行查找，并使用Vue实例的方法$nextTick(); 因为此时数据获取到了，但页面内容并未渲染，在下一帧时才进行渲染\nVue3Vue3声明对象或数组后，不失去响应的赋值方式源代码：\nlet array: number[] &#x3D; reactive([]);\t\t\t&#x2F;&#x2F; proxy...\narray &#x3D; reactive([]);\t\t\t&#x2F;&#x2F; proxy...\narray &#x3D; [];\t\t\t&#x2F;&#x2F; [ ]\n\n\n\n\n\n\n\n提示\n可见，直接赋值[ ]，会让变量失去响应，再次赋值reactive()又不符合规范\n\n解决方式1Object.assign函数的原理是遍历所有可枚举和自有属性从源对象赋值到目标对象\nconst array: number &#x3D; reactive([]);\nObject.assign(array, [1,2,3]);\n\n解决方式2使用状态机管理代理对象\nconst state: IState &#x3D; reactive(&#123;\n    array: []\n&#125;);\nstate.array &#x3D; [];\n\nVue3样式穿透\n\n\n\n\n\n\n注意\n1.&lt;style&gt;标签设置scoped属性2.使用:(deep):3.html元素及css选择器均不能为根节点\n\n&lt;main&gt;\n    &lt;xxx&gt;&lt;&#x2F;xxx&gt;\n&lt;&#x2F;main&gt;\nmain &#123;\n    :deep(.xxx) &#123;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n    &#125;\n&#125;\n\nVue3设置子组件样式在父级无法穿透组件最外层级嵌套一层div\n&lt;div&gt;\n    &lt;main&gt;\n\n    &lt;&#x2F;main&gt;\n&lt;&#x2F;div&gt;","slug":"Vue-bug记录/index","date":"2021-05-08T16:00:00.000Z","categories_index":"bug","tags_index":"bug,vue","author_index":"Life Experiencer"}]