{"title":"小程序嵌入Echarts","uid":"22dc96c39bfd9211e7d5443bdb3c36d8","slug":"小程序嵌入Echarts/index","date":"2022-10-07T16:00:00.000Z","updated":"2023-04-07T03:55:10.069Z","comments":false,"path":"api/articles/小程序嵌入Echarts/index.json","keywords":null,"cover":null,"content":"<h3 id=\"1-构建组件嵌入Echarts\"><a href=\"#1-构建组件嵌入Echarts\" class=\"headerlink\" title=\"1. 构建组件嵌入Echarts\"></a>1. 构建组件嵌入Echarts</h3><p>新建一个文件夹<code>ec-canvas</code>，用于专门放置<code>echarts</code>相关文件，并创建同名的组件</p>\n<p>前往<code>echarts</code>官网制定自定义主题（因微信小程序大小限制，选择项目中需要用到的即可，尽量减少文件大小），之后将打包好的<code>echarts.js</code>文件放到上述创建好的目录中，然后编写如下代码：</p>\n<p><code>ec-canvas.wxml</code>文件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!-- 新的--&gt;\n&lt;canvas\n    wx:if&#x3D;&quot;&#123;&#123;isUseNewCanvas&#125;&#125;&quot;\n\ttype&#x3D;&quot;2d&quot;s\n    class&#x3D;&quot;ec-canvas&quot;\n    canvas-id&#x3D;&quot;&#123;&#123; canvasId &#125;&#125;&quot;\n    bindinit&#x3D;&quot;init&quot;\n    bindtouchstart&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchStart&#39; &#125;&#125;&quot;\n    bindtouchmove&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchMove&#39; &#125;&#125;&quot;\n    bindtouchend&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchEnd&#39; &#125;&#125;&quot;\n&gt;&lt;&#x2F;canvas&gt;\n&lt;!-- 旧的 --&gt;\n&lt;canvas\n    wx:else\n    class&#x3D;&quot;ec-canvas&quot;\n    canvas-id&#x3D;&quot;&#123;&#123; canvasId &#125;&#125;&quot;\n    bindinit&#x3D;&quot;init&quot;\n    bindtouchstart&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchStart&#39; &#125;&#125;&quot;\n    bindtouchmove&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchMove&#39; &#125;&#125;&quot;\n    bindtouchend&#x3D;&quot;&#123;&#123; ec.disableTouch ? &#39;&#39; : &#39;touchEnd&#39; &#125;&#125;&quot;\n&gt;&lt;&#x2F;canvas&gt;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>至于为什么用<code>isUseNewCanvas</code>变量控制，可以参考<a href=\"https://meng160626.github.io/post/wx%E5%B0%8F%E7%A8%8B%E5%BA%8F-bug%E8%AE%B0%E5%BD%95%2Findex\">文章</a></p>\n</div>\n<p><code>ec-canvas.js</code>文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import WxCanvas from &#39;.&#x2F;wx-canvas&#39;;\nimport * as echarts from &#39;.&#x2F;echarts&#39;;\n\nlet ctx;\n\nfunction compareVersion(v1, v2) &#123;\n  v1 &#x3D; v1.split(&#39;.&#39;)\n  v2 &#x3D; v2.split(&#39;.&#39;)\n  const len &#x3D; Math.max(v1.length, v2.length)\n\n  while (v1.length &lt; len) &#123;\n    v1.push(&#39;0&#39;)\n  &#125;\n  while (v2.length &lt; len) &#123;\n    v2.push(&#39;0&#39;)\n  &#125;\n\n  for (let i &#x3D; 0; i &lt; len; i++) &#123;\n    const num1 &#x3D; parseInt(v1[i])\n    const num2 &#x3D; parseInt(v2[i])\n\n    if (num1 &gt; num2) &#123;\n      return 1\n    &#125; else if (num1 &lt; num2) &#123;\n      return -1\n    &#125;\n  &#125;\n  return 0\n&#125;\n\nComponent(&#123;\n  properties: &#123;\n    canvasId: &#123;\n      type: String,\n      value: &#39;ec-canvas&#39;\n    &#125;,\n\n    ec: &#123;\n      type: Object\n    &#125;,\n\n    forceUseOldCanvas: &#123;\n      type: Boolean,\n      value: false\n    &#125;\n  &#125;,\n\n  data: &#123;\n    isUseNewCanvas: true\n  &#125;,\n\n  ready: function () &#123;\n    &#x2F;&#x2F; 禁用渐进式，因为drawImage不支持DOM作为参数\n    &#x2F;&#x2F; 查看 https:&#x2F;&#x2F;developers.weixin.qq.com&#x2F;miniprogram&#x2F;dev&#x2F;api&#x2F;canvas&#x2F;CanvasContext.drawImage.html\n    echarts.registerPreprocessor(option &#x3D;&gt; &#123;\n      if (option &amp;&amp; option.series) &#123;\n        if (option.series.length &gt; 0) &#123;\n          option.series.forEach(series &#x3D;&gt; &#123;\n            series.progressive &#x3D; 0;\n          &#125;);\n        &#125;\n        else if (typeof option.series &#x3D;&#x3D;&#x3D; &#39;object&#39;) &#123;\n          option.series.progressive &#x3D; 0;\n        &#125;\n      &#125;\n    &#125;);\n\n    if (!this.data.ec) &#123;\n      console.warn(&#39;组件需绑定 ec 变量，例：&lt;ec-canvas id&#x3D;&quot;mychart-dom-bar&quot; &#39;\n        + &#39;canvas-id&#x3D;&quot;mychart-bar&quot; ec&#x3D;&quot;&#123;&#123; ec &#125;&#125;&quot;&gt;&lt;&#x2F;ec-canvas&gt;&#39;);\n      return;\n    &#125;\n\n    if (!this.data.ec.lazyLoad) &#123;\n      this.init();\n    &#125;\n  &#125;,\n\n  methods: &#123;\n    init: function (callback) &#123;\n      const version &#x3D; wx.getSystemInfoSync().SDKVersion\n\n      const canUseNewCanvas &#x3D; compareVersion(version, &#39;2.9.0&#39;) &gt;&#x3D; 0;\n      const forceUseOldCanvas &#x3D; this.data.forceUseOldCanvas;\n      const isUseNewCanvas &#x3D; canUseNewCanvas &amp;&amp; !forceUseOldCanvas;\n      this.setData(&#123; isUseNewCanvas &#125;);\n\n      if (forceUseOldCanvas &amp;&amp; canUseNewCanvas) &#123;\n        console.warn(&#39;开发者强制使用旧canvas,建议关闭&#39;);\n      &#125;\n\n      if (isUseNewCanvas) &#123;\n        &#x2F;&#x2F; console.log(&#39;微信基础库版本大于2.9.0，开始使用&lt;canvas type&#x3D;&quot;2d&quot;&#x2F;&gt;&#39;);\n        &#x2F;&#x2F; 2.9.0 可以使用 &lt;canvas type&#x3D;&quot;2d&quot;&gt;&lt;&#x2F;canvas&gt;\n        this.initByNewWay(callback);\n      &#125; else &#123;\n        const isValid &#x3D; compareVersion(version, &#39;1.9.91&#39;) &gt;&#x3D; 0\n        if (!isValid) &#123;\n          console.error(&#39;微信基础库版本过低，需大于等于 1.9.91。&#39;\n            + &#39;参见：https:&#x2F;&#x2F;github.com&#x2F;ecomfe&#x2F;echarts-for-weixin&#39;\n            + &#39;#%E5%BE%AE%E4%BF%A1%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82&#39;);\n          return;\n        &#125; else &#123;\n          console.warn(&#39;建议将微信基础库调整大于等于2.9.0版本。升级后绘图将有更好性能&#39;);\n          this.initByOldWay(callback);\n        &#125;\n      &#125;\n    &#125;,\n\n    initByOldWay(callback) &#123;\n      &#x2F;&#x2F; 1.9.91 &lt;&#x3D; version &lt; 2.9.0：原来的方式初始化\n      ctx &#x3D; wx.createCanvasContext(this.data.canvasId, this);\n      const canvas &#x3D; new WxCanvas(ctx, this.data.canvasId, false);\n\n      echarts.setCanvasCreator(() &#x3D;&gt; &#123;\n        return canvas;\n      &#125;);\n      &#x2F;&#x2F; const canvasDpr &#x3D; wx.getSystemInfoSync().pixelRatio &#x2F;&#x2F; 微信旧的canvas不能传入dpr\n      const canvasDpr &#x3D; 1\n      var query &#x3D; wx.createSelectorQuery().in(this);\n      query.select(&#39;.ec-canvas&#39;).boundingClientRect(res &#x3D;&gt; &#123;\n        if (typeof callback &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n          this.chart &#x3D; callback(canvas, res.width, res.height, canvasDpr);\n        &#125;\n        else if (this.data.ec &amp;&amp; typeof this.data.ec.onInit &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n          this.chart &#x3D; this.data.ec.onInit(canvas, res.width, res.height, canvasDpr);\n        &#125;\n        else &#123;\n          this.triggerEvent(&#39;init&#39;, &#123;\n            canvas: canvas,\n            width: res.width,\n            height: res.height,\n            canvasDpr: canvasDpr &#x2F;&#x2F; 增加了dpr，可方便外面echarts.init\n          &#125;);\n        &#125;\n      &#125;).exec();\n    &#125;,\n\n    initByNewWay(callback) &#123;\n      &#x2F;&#x2F; version &gt;&#x3D; 2.9.0：使用新的方式初始化\n      const query &#x3D; wx.createSelectorQuery().in(this)\n      query\n        .select(&#39;.ec-canvas&#39;)\n        .fields(&#123; node: true, size: true &#125;)\n        .exec(res &#x3D;&gt; &#123;\n          const canvasNode &#x3D; res[0].node\n          this.canvasNode &#x3D; canvasNode\n\n          const canvasDpr &#x3D; wx.getSystemInfoSync().pixelRatio\n          const canvasWidth &#x3D; res[0].width\n          const canvasHeight &#x3D; res[0].height\n\n          const ctx &#x3D; canvasNode.getContext(&#39;2d&#39;)\n\n          const canvas &#x3D; new WxCanvas(ctx, this.data.canvasId, true, canvasNode)\n          echarts.setCanvasCreator(() &#x3D;&gt; &#123;\n            return canvas\n          &#125;)\n\n          if (typeof callback &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n            this.chart &#x3D; callback(canvas, canvasWidth, canvasHeight, canvasDpr)\n          &#125; else if (this.data.ec &amp;&amp; typeof this.data.ec.onInit &#x3D;&#x3D;&#x3D; &#39;function&#39;) &#123;\n            this.chart &#x3D; this.data.ec.onInit(canvas, canvasWidth, canvasHeight, canvasDpr)\n          &#125; else &#123;\n            this.triggerEvent(&#39;init&#39;, &#123;\n              canvas: canvas,\n              width: canvasWidth,\n              height: canvasHeight,\n              dpr: canvasDpr\n            &#125;)\n          &#125;\n        &#125;)\n    &#125;,\n    canvasToTempFilePath(opt) &#123;\n      if (this.data.isUseNewCanvas) &#123;\n        &#x2F;&#x2F; 新版\n        const query &#x3D; wx.createSelectorQuery().in(this)\n        query\n          .select(&#39;.ec-canvas&#39;)\n          .fields(&#123; node: true, size: true &#125;)\n          .exec(res &#x3D;&gt; &#123;\n            const canvasNode &#x3D; res[0].node\n            opt.canvas &#x3D; canvasNode\n            wx.canvasToTempFilePath(opt)\n          &#125;)\n      &#125; else &#123;\n        &#x2F;&#x2F; 旧的\n        if (!opt.canvasId) &#123;\n          opt.canvasId &#x3D; this.data.canvasId;\n        &#125;\n        ctx.draw(true, () &#x3D;&gt; &#123;\n          wx.canvasToTempFilePath(opt, this);\n        &#125;);\n      &#125;\n    &#125;,\n\n    touchStart(e) &#123;\n      if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;\n        var touch &#x3D; e.touches[0];\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mousedown&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.dispatch(&#39;mousemove&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;start&#39;);\n      &#125;\n    &#125;,\n\n    touchMove(e) &#123;\n      if (this.chart &amp;&amp; e.touches.length &gt; 0) &#123;\n        var touch &#x3D; e.touches[0];\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mousemove&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;change&#39;);\n      &#125;\n    &#125;,\n\n    touchEnd(e) &#123;\n      if (this.chart) &#123;\n        const touch &#x3D; e.changedTouches ? e.changedTouches[0] : &#123;&#125;;\n        var handler &#x3D; this.chart.getZr().handler;\n        handler.dispatch(&#39;mouseup&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.dispatch(&#39;click&#39;, &#123;\n          zrX: touch.x,\n          zrY: touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n        handler.processGesture(wrapTouch(e), &#39;end&#39;);\n      &#125;\n    &#125;\n  &#125;\n&#125;);\n\nfunction wrapTouch(event) &#123;\n  for (let i &#x3D; 0; i &lt; event.touches.length; ++i) &#123;\n    const touch &#x3D; event.touches[i];\n    touch.offsetX &#x3D; touch.x;\n    touch.offsetY &#x3D; touch.y;\n  &#125;\n  return event;\n&#125;</code></pre>\n\n<p><code>ec-canvas.json</code>文件</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;component&quot;: true,\n  &quot;usingComponents&quot;: &#123;&#125;\n&#125;</code></pre>\n\n<p><code>ec-canvas.wxss</code>文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.ec-canvas &#123;\n  width: 100%;\n  height: 100%;\n&#125;</code></pre>\n\n<p>创建<code>wx-canvas.js</code>文件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default class WxCanvas &#123;\n  constructor(ctx, canvasId, isNew, canvasNode) &#123;\n    this.ctx &#x3D; ctx;\n    this.canvasId &#x3D; canvasId;\n    this.chart &#x3D; null;\n    this.isNew &#x3D; isNew\n    if (isNew) &#123;\n      this.canvasNode &#x3D; canvasNode;\n    &#125;\n    else &#123;\n      this._initStyle(ctx);\n    &#125;\n\n    &#x2F;&#x2F; this._initCanvas(zrender, ctx);\n\n    this._initEvent();\n  &#125;\n\n  getContext(contextType) &#123;\n    if (contextType &#x3D;&#x3D;&#x3D; &#39;2d&#39;) &#123;\n      return this.ctx;\n    &#125;\n  &#125;\n\n  &#x2F;&#x2F; canvasToTempFilePath(opt) &#123;\n  &#x2F;&#x2F;   if (!opt.canvasId) &#123;\n  &#x2F;&#x2F;     opt.canvasId &#x3D; this.canvasId;\n  &#x2F;&#x2F;   &#125;\n  &#x2F;&#x2F;   return wx.canvasToTempFilePath(opt, this);\n  &#x2F;&#x2F; &#125;\n\n  setChart(chart) &#123;\n    this.chart &#x3D; chart;\n  &#125;\n\n  addEventListener() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  attachEvent() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  detachEvent() &#123;\n    &#x2F;&#x2F; noop\n  &#125;\n\n  _initCanvas(zrender, ctx) &#123;\n    zrender.util.getContext &#x3D; function () &#123;\n      return ctx;\n    &#125;;\n\n    zrender.util.$override(&#39;measureText&#39;, function (text, font) &#123;\n      ctx.font &#x3D; font || &#39;12px sans-serif&#39;;\n      return ctx.measureText(text);\n    &#125;);\n  &#125;\n\n  _initStyle(ctx) &#123;\n    ctx.createRadialGradient &#x3D; () &#x3D;&gt; &#123;\n      return ctx.createCircularGradient(arguments);\n    &#125;;\n  &#125;\n\n  _initEvent() &#123;\n    this.event &#x3D; &#123;&#125;;\n    const eventNames &#x3D; [&#123;\n      wxName: &#39;touchStart&#39;,\n      ecName: &#39;mousedown&#39;\n    &#125;, &#123;\n      wxName: &#39;touchMove&#39;,\n      ecName: &#39;mousemove&#39;\n    &#125;, &#123;\n      wxName: &#39;touchEnd&#39;,\n      ecName: &#39;mouseup&#39;\n    &#125;, &#123;\n      wxName: &#39;touchEnd&#39;,\n      ecName: &#39;click&#39;\n    &#125;];\n    eventNames.forEach(name &#x3D;&gt; &#123;\n      this.event[name.wxName] &#x3D; e &#x3D;&gt; &#123;\n        const touch &#x3D; e.touches[0];\n        this.chart.getZr().handler.dispatch(name.ecName, &#123;\n          zrX: name.wxName &#x3D;&#x3D;&#x3D; &#39;tap&#39; ? touch.clientX : touch.x,\n          zrY: name.wxName &#x3D;&#x3D;&#x3D; &#39;tap&#39; ? touch.clientY : touch.y,\n          preventDefault: () &#x3D;&gt; &#123;&#125;,\n          stopImmediatePropagation: () &#x3D;&gt; &#123;&#125;,\n          stopPropagation: () &#x3D;&gt; &#123;&#125;\n        &#125;);\n      &#125;;\n    &#125;);\n  &#125;\n\n  set width(w) &#123;\n    if (this.canvasNode) this.canvasNode.width &#x3D; w\n  &#125;\n  set height(h) &#123;\n    if (this.canvasNode) this.canvasNode.height &#x3D; h\n  &#125;\n\n  get width() &#123;\n    if (this.canvasNode)\n      return this.canvasNode.width\n    return 0\n  &#125;\n  get height() &#123;\n    if (this.canvasNode)\n      return this.canvasNode.height\n    return 0\n  &#125;\n&#125;</code></pre>\n<p>以上代码均来自： <a href=\"https://gitcode.net/mirrors/ecomfe/echarts-for-weixin/-/tree/master/ec-canvas\">echarts-for-weixin</a></p>\n<h3 id=\"2-使用组件\"><a href=\"#2-使用组件\" class=\"headerlink\" title=\"2.使用组件\"></a>2.使用组件</h3><p>这里用<code>this._chart</code>的方式记录<code>echarts</code>实例，用于后续动态刷新</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;ec-canvas\n    id&#x3D;&quot;line&quot;\n    type&#x3D;&quot;2d&quot;\n    canvas-id&#x3D;&quot;line&quot;\n    ec&#x3D;&quot;&#123;&#123;lineEC&#125;&#125;&quot;\n&gt;&lt;&#x2F;ec-canvas&gt;</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import * as echarts from &#39;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts&#39;;\n\nPage(&#123;\n    data: &#123;\n        lineEC:&#123;\n          lazyLoad: true\n        &#125;,\n    &#125;,\n    &#x2F;&#x2F;绘制折线图\n    drawLine(dataList) &#123;\n        let xAxis &#x3D; [], series &#x3D; [];\n        const _dataList &#x3D; dataList.map((item,idx) &#x3D;&gt; &#123;\n            if(this.data.legendList.length &#x3D;&#x3D;&#x3D; 0) &#123;\n                item.color &#x3D; this.data._baseColor[idx];\n            &#125;else &#123;\n                item.color &#x3D; this.data.legendList.find(item2 &#x3D;&gt; item2.name &#x3D;&#x3D;&#x3D; item.name).color;\n            &#125;\n\n            if(item.active &#x3D;&#x3D;&#x3D; undefined) &#123;\n                item.active &#x3D; true;   &#x2F;&#x2F;是否激活\n            &#125;\n            xAxis &#x3D; item.data.map(item2 &#x3D;&gt; formatterDate(new Date(item2.time), &#39;HH:mm:ss&#39;));\n            series.push(&#123;\n                ...item,\n                type: &#39;line&#39;,\n                lineStyle: &#123;\n                    color: item.color\n                &#125;,\n                symbol: &#39;none&#39;,\n                data: item.data.map(item2 &#x3D;&gt; item2.value)\n            &#125;);\n            return item;\n        &#125;);\n        if(this.data.legendList.length &#x3D;&#x3D;&#x3D; 0) &#123;\n            this.setData(&#123;\n                legendList: _dataList\n            &#125;);\n        &#125;\n\n        this.selectComponent(&quot;#line&quot;).init((canvas, width, height, dpr) &#x3D;&gt; &#123;\n            let chart &#x3D; this._chart;\n            if(!this._chart) &#123;\n                chart &#x3D; echarts.init(canvas, null, &#123;\n                    width: width,\n                    height: height,\n                    devicePixelRatio: dpr\n                &#125;);\n                this._chart &#x3D; chart;\n            &#125;\n            canvas.setChart(chart);\n            chart.setOption(&#123;\n                tooltip: &#123;\n                    trigger: &#39;axis&#39;,\n                    formatter: function(params) &#123;\n                        let str &#x3D; &#96;$&#123;dataList[0].data[params[0].dataIndex].time&#125;\\n&#96;;\n                        params.forEach((item, idx) &#x3D;&gt; &#123;\n                            str +&#x3D; &#96;$&#123;item.marker&#125; $&#123;item.seriesName&#125;：$&#123;item.value&#125;$&#123;dataList[item.seriesIndex].unit&#125;&#96;;\n                            if(idx &lt; params.length - 1) str +&#x3D; &#39;\\n&#39;;\n                        &#125;);\n                        return str;\n                    &#125;,\n                    position: function (point, params, dom, rect, size) &#123;\n                        var x &#x3D; 0; &#x2F;&#x2F; x坐标位置\n                        var y &#x3D; 0; &#x2F;&#x2F; y坐标位置\n\n                        &#x2F;&#x2F; 当前鼠标位置\n                        var pointX &#x3D; point[0];\n                        var pointY &#x3D; point[1];\n\n                        &#x2F;&#x2F; 外层div大小\n                        var viewWidth &#x3D; size.viewSize[0];\n                        var viewHeight &#x3D; size.viewSize[1];\n\n                        &#x2F;&#x2F; 提示框大小\n                        var boxWidth &#x3D; size.contentSize[0];\n                        var boxHeight &#x3D; size.contentSize[1];\n                        if(pointX &lt; viewWidth &#x2F; 2) &#123;\n                            x &#x3D; pointX + 5;\n                        &#125;else &#123;\n                            x &#x3D; pointX - boxWidth - 5;\n                        &#125;\n\n                        &#x2F;&#x2F; boxHeight &gt; pointY 说明鼠标上边放不下提示框\n                        if (boxHeight &gt; pointY) &#123;\n                            y &#x3D; 5;\n                        &#125; else &#123; &#x2F;&#x2F; 上边放得下\n                            y &#x3D; pointY - boxHeight;\n                        &#125;\n                        return [x, y];\n                    &#125;\n                &#125;,\n                grid: &#123;\n                    top: &#39;10%&#39;,\n                    left: &#39;3%&#39;,\n                    right: &#39;4%&#39;,\n                    bottom: &#39;50%&#39;,\n                    containLabel: true\n                &#125;,\n                xAxis: &#123;\n                    type: &#39;category&#39;,\n                    boundaryGap: false,\n                    data: xAxis\n                &#125;,\n                yAxis: &#123;\n                    type: &#39;value&#39;\n                &#125;,\n                series\n            &#125;,true);\n            return chart;\n        &#125;);\n    &#125;\n&#125;);</code></pre>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  ...\n  &quot;usingComponents&quot;: &#123;\n    &quot;ec-canvas&quot;: &quot;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;ec-canvas&quot;\n  &#125;\n&#125;</code></pre>\n\n<h3 id=\"3-接入社区插件-实例为水球图\"><a href=\"#3-接入社区插件-实例为水球图\" class=\"headerlink\" title=\"3.接入社区插件 实例为水球图\"></a>3.接入社区插件 实例为水球图</h3><p>将对应<code>echarts</code>版本的插件文件放入到文件夹中，例如<code>echarts-liquidfill.js</code></p>\n<p>在js中引入对应插件即可使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import * as liquidFill from &#39;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts-liquidfill&#39;;\nimport * as echarts from &#39;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ec-canvas&#x2F;echarts&#39;;\n\n&#x2F;**\n  * 项目右洞图表绘制\n  *&#x2F;\ndrawJcChart3(data) &#123;\n    wx.nextTick(() &#x3D;&gt; &#123;\n        this.selectComponent(&quot;#jc-chart3&quot;).init((canvas, width, height, dpr) &#x3D;&gt; &#123;\n            let chart &#x3D; echarts.init(canvas, null, &#123;\n                width: width,\n                height: height,\n                devicePixelRatio: dpr &#x2F;&#x2F; new\n            &#125;);\n            canvas.setChart(chart);\n            chart.setOption(this.getJcChartOptions(data, &quot;#4DF59B&quot;, &#39;#1DCDA5&#39;, &#39;#94fce4&#39;, &#39;#043526&#39;));\n            return chart;\n        &#125;);\n    &#125;);\n&#125;,\n&#x2F;**\n  * 获取水球图表配置\n  *&#x2F;\ngetJcChartOptions: function (data, color1, color2, color3, color4) &#123;\n    return &#123;\n        series: [\n            &#123;\n                &#x2F;&#x2F; value: 50, &#x2F;&#x2F;  内容 配合formatter\n                type: &#39;liquidFill&#39;,\n                radius: &#39;95%&#39;, &#x2F;&#x2F; 控制中间圆球的尺寸（此处可以理解为距离外圈圆的距离控制）\n                center: [&#39;50%&#39;, &#39;50%&#39;],\n                data: [\n                   &#123;\n                        value: data,\n                        itemStyle: &#123;\n                            shadowBlur: 10\n                        &#125;\n                    &#125;,\n                    &#123;\n                        value: data - 0.03,\n                        direction: &#39;left&#39;, &#x2F;&#x2F;波浪方向\n                        itemStyle: &#123;\n                            shadowBlur: 10\n                        &#125;\n                    &#125;,\n                ], &#x2F;&#x2F; data个数代表波浪数\n                backgroundStyle: &#123;\n                    borderWidth: 0,\n                    color: color3, &#x2F;&#x2F; 球体本景色\n                &#125;,\n                amplitude: &#39;6  %&#39;, &#x2F;&#x2F;波浪的振幅\n                color: [&#123;\n                    type: &#39;linear&#39;,\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [&#123;\n                        offset: 1,\n                        color: color1,\n                    &#125;,\n                    &#123;\n                        offset: 0,\n                        color: color2,\n                    &#125;],\n                    globalCoord: false,\n                &#125;,],\n                label: &#123;\n                    normal: &#123;\n                        formatter: Math.round(data * 100 * 100) &#x2F; 100 + &#39;&#123;d|%&#125;&#39;,\n                        rich: &#123;\n                            d: &#123;\n                                fontSize: 18,\n                            &#125;,\n                        &#125;,\n                        textStyle: &#123;\n                            fontSize: 18,\n                            color: color4,\n                        &#125;,\n                    &#125;,\n                &#125;,\n                outline: &#123;\n                    show: false,\n                &#125;, \n            &#125;\n        ]\n    &#125;;\n&#125;,</code></pre>","text":"1. 构建组件嵌入Echarts新建一个文件夹ec-canvas，用于专门放置echarts相关文件，并创建同名的组件 前往echarts官网制定自定义主题（因微信小程序大小限制，选择项目中需要用到的即可，尽量减少文件大小），之后将打包好的echarts.js文件放到上述创建好的...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"小程序","slug":"小程序","count":1,"path":"api/categories/小程序.json"}],"tags":[{"name":"小程序","slug":"小程序","count":1,"path":"api/tags/小程序.json"},{"name":"Echarts","slug":"Echarts","count":1,"path":"api/tags/Echarts.json"},{"name":"组件引入","slug":"组件引入","count":1,"path":"api/tags/组件引入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9E%84%E5%BB%BA%E7%BB%84%E4%BB%B6%E5%B5%8C%E5%85%A5Echarts\"><span class=\"toc-text\">1. 构建组件嵌入Echarts</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">2.使用组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8E%A5%E5%85%A5%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6-%E5%AE%9E%E4%BE%8B%E4%B8%BA%E6%B0%B4%E7%90%83%E5%9B%BE\"><span class=\"toc-text\">3.接入社区插件 实例为水球图</span></a></li></ol>","author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"vite配置https","uid":"55764d82013bf7d28ae08f515ae0da0c","slug":"Vite配置https证书/index","date":"2022-10-21T16:00:00.000Z","updated":"2023-04-07T04:05:04.201Z","comments":true,"path":"api/articles/Vite配置https证书/index.json","keywords":null,"cover":null,"text":"1.全局安装mkcert$ npm i mkcert -g 2.在任意目录，打开终端输入指令，生成ca证书$ mkcert create-ca 3.再根据ca证书生成cert证书$ mkcert create-cert localhost 127.0.0.1 双击ca.crt导入...","link":"","photos":[],"count_time":{"symbolsCount":612,"symbolsTime":"1 mins."},"categories":[{"name":"环境搭建及配置","slug":"环境搭建及配置","count":4,"path":"api/categories/环境搭建及配置.json"}],"tags":[{"name":"vite","slug":"vite","count":1,"path":"api/tags/vite.json"},{"name":"https","slug":"https","count":1,"path":"api/tags/https.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"uni-app开发小程序 bug记录","uid":"d2b1c86d84778284c9a48f05cbcb4fb9","slug":"uni-app开发小程序-bug记录/index","date":"2022-08-22T16:00:00.000Z","updated":"2023-04-06T05:59:01.677Z","comments":true,"path":"api/articles/uni-app开发小程序-bug记录/index.json","keywords":null,"cover":[],"text":"使用uView组件u-datetime-picker组件渲染失效 使用该组件时，如果以任何方式配置cancel事件，会导致组件渲染失败需要如下添加两条属性，并且值不能为官方默认值，否则依旧会渲染失败 无法穿透至组件内部修改样式 需要在methods同级位置添加代码 options...","link":"","photos":[],"count_time":{"symbolsCount":318,"symbolsTime":"1 mins."},"categories":[{"name":"bug","slug":"bug","count":6,"path":"api/categories/bug.json"}],"tags":[{"name":"bug","slug":"bug","count":6,"path":"api/tags/bug.json"},{"name":"uni-app","slug":"uni-app","count":2,"path":"api/tags/uni-app.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}