{"title":"JS 性能优化","uid":"f088523d700dba81d882acdf8af76d34","slug":"JS性能优化/index","date":"2023-07-22T16:00:00.000Z","updated":"2023-07-25T09:11:51.918Z","comments":true,"path":"api/articles/JS性能优化/index.json","keywords":null,"cover":[],"content":"<h3 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h3><p><img src=\"/image/knowledge/%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E6%97%B6%E9%97%B4%E8%8A%82%E7%82%B9.png\" alt=\"网页加载时间节点\"></p>\n<h4 id=\"Navigation-Timing-API\"><a href=\"#Navigation-Timing-API\" class=\"headerlink\" title=\"Navigation Timing API\"></a>Navigation Timing API</h4><ul>\n<li>navigationStart &#x2F; end</li>\n</ul>\n<p>表示从上一个文档卸载结束时 &#x3D;&gt; 如果没有上一个文档，这个值和fetchStart相等</p>\n<ul>\n<li>unloadEventStart &#x2F; end</li>\n</ul>\n<p>标识一个网页unload的时间点 &#x3D;&gt; 如果没有上一个文档，则差值为0</p>\n<ul>\n<li>redirectStart &#x2F; end</li>\n</ul>\n<p>第一个HTTP重定向发生和结束的时间</p>\n<ul>\n<li>fetchStart</li>\n</ul>\n<p>浏览器准备好使用请求获取文档的时间</p>\n<ul>\n<li>domainLookupStart &#x2F; end</li>\n</ul>\n<p>HTTP开始建立连接的时间</p>\n<ul>\n<li>connectStart &#x2F; end</li>\n</ul>\n<p>TCP开始建立连接的时间</p>\n<ul>\n<li>secureConnectionStart &#x2F; end</li>\n</ul>\n<p>HTTPS连接开始的时间</p>\n<ul>\n<li>requestStart &#x2F; end</li>\n<li>responseStart &#x2F; end</li>\n</ul>\n<p>网络请求响应的时间</p>\n<ul>\n<li>domLoading</li>\n</ul>\n<p>开始解析渲染DOM树的时间 &#x3D;&gt; document.readyState变成loading &#x3D;&gt; 抛出钩子 readystatechange</p>\n<ul>\n<li>domInteractive</li>\n</ul>\n<p>完成解析 &#x3D;&gt; 对dom树解析完成</p>\n<ul>\n<li>domContentLoadedEventStart &#x2F; end</li>\n</ul>\n<p>加载网页内资源的时间</p>\n<ul>\n<li>domComplete</li>\n</ul>\n<p>Dom完全解析完成</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 拿到页面解析完整时长\ndocument.addEventListener(&quot;readystatechange&quot;, e &#x3D;&gt; &#123;\n    if (document.readyState &#x3D;&#x3D;&#x3D; &#39;complete&#39;) &#123;\n        var perfData &#x3D; window.performance.timing;\n        var pageLoadTime &#x3D; perfData.domComplete - perfData.navigationStart;\n        console.log(&quot;页面加载耗时：&quot;, pageLoadTime, &#39;ms&#39;);\n    &#125;\n&#125;);\n\n&#x2F;&#x2F; 平均值、实时值</code></pre>\n\n<h4 id=\"Core-Web-Vitals-网页核心性能指标\"><a href=\"#Core-Web-Vitals-网页核心性能指标\" class=\"headerlink\" title=\"Core Web Vitals - 网页核心性能指标\"></a>Core Web Vitals - 网页核心性能指标</h4><p>Google提出的三个指标，每一个都代表了用户体验的不同方面 —— 加载、交互、视觉稳定性</p>\n<h5 id=\"Largest-Contentful-Paint-LCP\"><a href=\"#Largest-Contentful-Paint-LCP\" class=\"headerlink\" title=\"Largest Contentful Paint (LCP)\"></a>Largest Contentful Paint (LCP)</h5><p>衡量装载性能: LCP应该在页面首次开始加载后2.5s内发生</p>\n<ul>\n<li>前2.5s进行最大内容的渲染</li>\n</ul>\n<p>a. 最大内容包含了哪些？</p>\n<ul>\n<li><code>&lt;img&gt;</code></li>\n<li><code>&lt;svg&gt;</code></li>\n<li><code>&lt;video&gt;</code></li>\n<li>通过url函数加载的背景图片</li>\n<li>包含了大块内嵌内容的块级元素</li>\n</ul>\n<p>b. LCP值低下的原因？</p>\n<ul>\n<li>服务器响应慢</li>\n<li>资源的加载时间过长</li>\n<li>存在阻断渲染的Javascript | CSS</li>\n<li>客户端渲染机器的影响</li>\n</ul>\n<p>c. 针对性改造</p>\n<ul>\n<li>服务器的优化</li>\n</ul>\n<p>缓存HTML离线页面，缓存页面资源，减少浏览器直接对资源的请求 &#x3D;&gt; 缓存机制</p>\n<p>对图片的优化，进行图片合理化使用，降低图片大小，加快请求速度 &#x3D;&gt; 图片上传格式 | 云资源管理</p>\n<p>重写、压缩、注释过滤等方式减少最终文件大小，加快加载速度 &#x3D;&gt; webpack vite 工程化打包</p>\n<p>使用CDN —— 物理上接近请求点</p>\n<ul>\n<li>渲染阻断优化</li>\n</ul>\n<p>CSS + JS &#x3D;&gt; 延迟处理</p>\n<p>首屏优化 &#x3D;&gt; 懒加载、异步加载</p>\n<p>CSS模块化<br>SSR服务端渲染</p>\n<h5 id=\"First-Input-Delay-FID\"><a href=\"#First-Input-Delay-FID\" class=\"headerlink\" title=\"First Input Delay (FID)\"></a>First Input Delay (FID)</h5><p>衡量交互性: 页面的首次输入延迟应该小于100ms</p>\n<p>原因: 执行阻塞</p>\n<p>a. 减少JS执行时间</p>\n<ul>\n<li>缩小压缩JS文件</li>\n<li>延迟加载不需要的JS &#x3D;&gt; 模块懒加载 | tree shaking</li>\n<li>尽量减少未使用的polyfill</li>\n</ul>\n<p>b. 分解耗时任务</p>\n<ul>\n<li>减少长逻辑</li>\n<li>异步化</li>\n</ul>\n<p>c. worker<br>web worker | service worker</p>\n<h5 id=\"Cumulative-Layout-Shift-CLS\"><a href=\"#Cumulative-Layout-Shift-CLS\" class=\"headerlink\" title=\"Cumulative Layout Shift (CLS)\"></a>Cumulative Layout Shift (CLS)</h5><p>测量视觉稳定性: 页面稳定性在加载过程中以及渲染后CLS小于0.1 &#x3D;&gt; 整体布局的移动可能发生在可见元素从一帧到下一帧改变位置的任何阶段</p>\n<p>a. 会带来偏移的因素？</p>\n<ul>\n<li>图片</li>\n<li>内容插入</li>\n<li>字体</li>\n</ul>\n<h2 id=\"b-针对性解决？-不使用无尺寸元素-x3D-gt-srcset-amp-sizes\"><a href=\"#b-针对性解决？-不使用无尺寸元素-x3D-gt-srcset-amp-sizes\" class=\"headerlink\" title=\"b. 针对性解决？- 不使用无尺寸元素 &#x3D;&gt; srcset &amp; sizes\"></a>b. 针对性解决？<br>- 不使用无尺寸元素 &#x3D;&gt; srcset &amp; sizes</h2><ul>\n<li>整体化内容插入 &#x3D;&gt; 避免频繁影响整体布局 &#x3D;&gt; 避免回流</li>\n<li>动态字体控制</li>\n</ul>\n<h4 id=\"性能评估神器-performance\"><a href=\"#性能评估神器-performance\" class=\"headerlink\" title=\"性能评估神器 - performance\"></a>性能评估神器 - performance</h4><h4 id=\"性能监控体系\"><a href=\"#性能监控体系\" class=\"headerlink\" title=\"性能监控体系\"></a>性能监控体系</h4><p>数据采集 &#x3D;&gt; 汇总展示</p>\n<ol>\n<li>埋点上报 &#x3D;&gt; 点到点 + 信息采集</li>\n<li>数据处理 &#x3D;&gt; 阈值设置 + 数据分类 + 数据重组</li>\n<li>可视化展示</li>\n</ol>\n<p>评估</p>\n<ol>\n<li>根据指标要求进行数据圈层 &#x3D;&gt; 数据归档</li>\n<li>定位问题</li>\n</ol>\n<p>指导提升</p>\n<ol>\n<li>告警处理</li>\n<li>触发分派</li>\n</ol>\n","feature":true,"text":"性能优化 Navigation Timing API navigationStart &#x2F; end 表示从上一个文档卸载结束时 &#x3D;&gt; 如果没有上一个文档，这个值和fetchStart相等 unloadEventStart &#x2F; end 标识一个网页...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"效率优化","slug":"效率优化","count":5,"path":"api/categories/效率优化.json"}],"tags":[{"name":"JS","slug":"JS","count":4,"path":"api/tags/JS.json"},{"name":"性能优化","slug":"性能优化","count":1,"path":"api/tags/性能优化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">性能优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Navigation-Timing-API\"><span class=\"toc-text\">Navigation Timing API</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Core-Web-Vitals-%E7%BD%91%E9%A1%B5%E6%A0%B8%E5%BF%83%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87\"><span class=\"toc-text\">Core Web Vitals - 网页核心性能指标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Largest-Contentful-Paint-LCP\"><span class=\"toc-text\">Largest Contentful Paint (LCP)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#First-Input-Delay-FID\"><span class=\"toc-text\">First Input Delay (FID)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Cumulative-Layout-Shift-CLS\"><span class=\"toc-text\">Cumulative Layout Shift (CLS)</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#b-%E9%92%88%E5%AF%B9%E6%80%A7%E8%A7%A3%E5%86%B3%EF%BC%9F-%E4%B8%8D%E4%BD%BF%E7%94%A8%E6%97%A0%E5%B0%BA%E5%AF%B8%E5%85%83%E7%B4%A0-x3D-gt-srcset-amp-sizes\"><span class=\"toc-text\">b. 针对性解决？- 不使用无尺寸元素 &#x3D;&gt; srcset &amp; sizes</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E7%A5%9E%E5%99%A8-performance\"><span class=\"toc-text\">性能评估神器 - performance</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%BD%93%E7%B3%BB\"><span class=\"toc-text\">性能监控体系</span></a></li></ol></li></ol>","author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"函数式编程","uid":"78bf35c97e41da6a2bdad05b63951aa3","slug":"函数式编程/index","date":"2023-07-22T16:00:00.000Z","updated":"2023-07-25T10:13:07.574Z","comments":true,"path":"api/articles/函数式编程/index.json","keywords":null,"cover":null,"text":"一、函数式编程特点1. 原理 加法结合律 | 因式分解 | 完全平方公式 &#x3D;&gt; 原子组合进行变化 a + b + c &#x3D; (a + b) + c 2. 理论思想 函数是一等公民 &#x3D;&gt; 将函数视为实际功能逻辑的落脚点 &#x3D;&gt; ...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"效率优化","slug":"效率优化","count":5,"path":"api/categories/效率优化.json"}],"tags":[{"name":"JS","slug":"JS","count":4,"path":"api/tags/JS.json"},{"name":"函数式编程","slug":"函数式编程","count":1,"path":"api/tags/函数式编程.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"前端知识点之浏览器相关","uid":"8b52d758712f8281d95dde7e25dd1780","slug":"前端知识点之浏览器相关/index","date":"2023-07-16T16:00:00.000Z","updated":"2023-07-17T05:59:28.797Z","comments":true,"path":"api/articles/前端知识点之浏览器相关/index.json","keywords":null,"cover":null,"text":"浏览器相关1. BOM1.1 locationlocation.href &#x3D;&gt; ‘https://www.xxx.com/search?class=browser#comments‘ .origin &#x3D;&gt; https://www.xxx.com ....","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"知识点","slug":"知识点","count":10,"path":"api/categories/知识点.json"}],"tags":[{"name":"面试题","slug":"面试题","count":5,"path":"api/tags/面试题.json"},{"name":"浏览器","slug":"浏览器","count":1,"path":"api/tags/浏览器.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}