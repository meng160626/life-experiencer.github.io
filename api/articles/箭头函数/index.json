{"title":"普通函数和箭头函数对比","uid":"b39eb3771e2c27928893a4957cbefffa","slug":"箭头函数/index","date":"2022-11-02T16:00:00.000Z","updated":"2023-05-08T09:29:23.341Z","comments":true,"path":"api/articles/箭头函数/index.json","keywords":null,"cover":null,"content":"<p>当创建者、调用者一致时</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">!(() &#x3D;&gt; &#123;\n    console.log(this);      &#x2F;&#x2F; Window\n&#125;)();\n\n!(function() &#123;\n    console.log(this);      &#x2F;&#x2F; Window\n&#125;)();</code></pre>\n\n<p>进行对照实验</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const obj &#x3D; &#123;\n    func: function() &#123;\n        console.log(this);\n    &#125;,\n    lam: () &#x3D;&gt; &#123;\n        console.log(this);\n    &#125;\n&#125;;\n\nconst a &#x3D; &#123;\n    name: &#39;a&#39;\n&#125;;\n\nobj.func.call(a);   &#x2F;&#x2F; a\nobj.lam.call(a);    &#x2F;&#x2F; Window\nobj.func();         &#x2F;&#x2F; obj\nobj.lam();          &#x2F;&#x2F; Window</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const obj &#x3D; &#123;\n    func: function() &#123;\n        return function() &#123;\n            console.log(this);\n        &#125;\n    &#125;,\n    lam: function() &#123;\n        return () &#x3D;&gt; &#123;\n            console.log(this);\n        &#125;\n    &#125;\n&#125;;\n\nobj.func()();       &#x2F;&#x2F; Window\nobj.lam()();        &#x2F;&#x2F; obj</code></pre>\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>箭头函数在创建时就已经绑定了<code>this</code>，即指向其父级外层的<code>this</code>，而不是使用时所在的作用域指向的对象<br>(可以快速的识别箭头函数的<code>this</code>，即将其所在的大括号去掉，或理解为<strong>父级所在</strong>的<code>this</code>)</p></blockquote>\n","text":"当创建者、调用者一致时 !(() &#x3D;&gt; &#123; console.log(this); &#x2F;&#x2F; Window &#125;)(); !(function() &#123; console.log(this); &#x2F;&#x2F; Win...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"知识点","slug":"知识点","count":5,"path":"api/categories/知识点.json"}],"tags":[{"name":"箭头函数","slug":"箭头函数","count":1,"path":"api/tags/箭头函数.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"内存泄漏排查记录","uid":"fe07511baca233cfbf08f1c1c1d5d46a","slug":"内存泄漏/index","date":"2022-11-18T16:00:00.000Z","updated":"2023-04-06T05:05:18.672Z","comments":true,"path":"api/articles/内存泄漏/index.json","keywords":null,"cover":null,"text":" 场景 页面长期不关闭后，页面卡死 排查记录 1、打开浏览器开发工具性能监视器 2、操作页面观察js堆大小发现：随着操作次数增加，js堆内存在每次垃圾回收以后逐次增加 3、刷新页面，查看内存，强制触发垃圾回收，拍摄堆快照 4、反复操作页面后，再次拍摄堆快照 5、对比两次快照，打开...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"效率优化","slug":"效率优化","count":3,"path":"api/categories/效率优化.json"}],"tags":[{"name":"内存泄漏","slug":"内存泄漏","count":1,"path":"api/tags/内存泄漏.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vite配置https","uid":"55764d82013bf7d28ae08f515ae0da0c","slug":"Vite配置https证书/index","date":"2022-10-21T16:00:00.000Z","updated":"2023-04-07T04:05:04.201Z","comments":true,"path":"api/articles/Vite配置https证书/index.json","keywords":null,"cover":null,"text":"1.全局安装mkcert$ npm i mkcert -g 2.在任意目录，打开终端输入指令，生成ca证书$ mkcert create-ca 3.再根据ca证书生成cert证书$ mkcert create-cert localhost 127.0.0.1 双击ca.crt导入...","link":"","photos":[],"count_time":{"symbolsCount":612,"symbolsTime":"1 mins."},"categories":[{"name":"环境搭建及配置","slug":"环境搭建及配置","count":4,"path":"api/categories/环境搭建及配置.json"}],"tags":[{"name":"vite","slug":"vite","count":1,"path":"api/tags/vite.json"},{"name":"https","slug":"https","count":1,"path":"api/tags/https.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}