{"title":"前端压缩","uid":"77f748c7cea4ef5fb4d783ef512007b4","slug":"前端压缩/index","date":"2022-07-01T16:00:00.000Z","updated":"2023-04-07T05:36:31.932Z","comments":true,"path":"api/articles/前端压缩/index.json","keywords":null,"cover":null,"content":"<h3 id=\"1-引入JSZip\"><a href=\"#1-引入JSZip\" class=\"headerlink\" title=\"1.引入JSZip\"></a>1.引入JSZip</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script src&#x3D;&quot;jszip.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script src&#x3D;&quot;jszip-utils.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n\n<p><a href=\"https://stuk.github.io/jszip/\">jszip.js</a><br><a href=\"https://github.com/Stuk/jszip-utils\">jszip-utils.js</a></p>\n<h3 id=\"2-封装工具类\"><a href=\"#2-封装工具类\" class=\"headerlink\" title=\"2.封装工具类\"></a>2.封装工具类</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;**\n * 压缩\n * @param file 文件 类型为：File &#x2F; FileList\n * @param packageName 压缩包名称\n *&#x2F;\nfunction compressFiles(files, packageName) &#123;\n    let zip &#x3D; new JSZip();\n    &#x2F;&#x2F; 如果类型为File\n    if (Object.prototype.toString.call(files) &#x3D;&#x3D;&#x3D; &#39;[object File]&#39;) &#123;\n        let reader &#x3D; new FileReader();\n        reader.readAsArrayBuffer(files);\n        reader.addEventListener(&quot;loadend&quot;, function(e) &#123;\n            let blob &#x3D; new Blob([e.target.result], &#123; type: file.type &#125;);\n            zip.file(file.name, blob);\n            zip.generateAsync(&#123; type: &quot;blob&quot; &#125;).then(bl &#x3D;&gt; &#123;\n                saveAs(bl, packageName);\n            &#125;);\n        &#125;);\n    &#x2F;&#x2F; 如果类型为FileList\n    &#125; else if (Object.prototype.toString.call(files) &#x3D;&#x3D;&#x3D; &#39;[object FileList]&#39;) &#123;\n        let reader &#x3D; new FileReader();\n        let i &#x3D; 0;\n        &#x2F;&#x2F; 递归读取流\n        reader.addEventListener(&quot;loadend&quot;, function(e) &#123;\n            &#x2F;&#x2F; 读取后的流写入zip中\n            let blob &#x3D; new Blob([e.target.result], &#123; type: files[i].type &#125;);\n            zip.file(files[i].name, blob);\n            if (i &#x3D;&#x3D;&#x3D; Object.keys(files).length - 1) &#123;\n                &#x2F;&#x2F; 如果全部压缩后，下载\n                zip.generateAsync(&#123; type: &quot;blob&quot; &#125;).then(bl &#x3D;&gt; &#123;\n                    saveAs(bl, packageName);\n                &#125;);\n            &#125; else &#123;\n                reader.readAsArrayBuffer(files[++i]);\n            &#125;\n        &#125;);\n        reader.readAsArrayBuffer(files[i]);\n    &#125;\n&#125;\n\n&#x2F;**\n * 解压本地文件\n * @param file 压缩文件\n * @param callback 解压后的回调函数 参数分别为文件路径和文件\n *&#x2F;\nfunction uncompressNative(file, callback) &#123;\n    JSZip.loadAsync(file).then(function(zip) &#123;\n        zip.forEach((path, file) &#x3D;&gt; &#123;\n            callback(path, file);\n        &#125;);\n    &#125;, function() &#123;\n        console.error(&#39;解压失败&#39;);\n    &#125;);\n&#125;\n\n&#x2F;**\n * 解压线上文件\n * @param path \n * @param callback 解压后的回调 参数为单个文件\n *&#x2F;\nfunction uncompressOnline(path, callback) &#123;\n    let promise &#x3D; new JSZip.external.Promise(function (resolve, reject) &#123;\n        JSZipUtils.getBinaryContent(path, function(err, data) &#123;\n            if (err) &#123;\n                reject(err);\n            &#125; else &#123;\n                resolve(data);\n            &#125;\n        &#125;);\n    &#125;);\n    promise.then(JSZip.loadAsync)\n    .then(function(zip) &#123;\n        for (key in zip.files) &#123;\n            zip.file(key).async(&quot;blob&quot;).then(blob &#x3D;&gt; &#123;\n                let file &#x3D; new File([blob], zip.files[key].name);\n                callback(file);\n            &#125;);\n        &#125;\n    &#125;)\n    .then(function success(text) &#123;\n        \n    &#125;, function error(e) &#123;\n        \n    &#125;);\n&#125;\n\n&#x2F;**\n * 下载\n * @param blob 文件二进制流\n * @param filename 文件名称\n *&#x2F;\nfunction saveAs(blob, filename) &#123;\n    if (window.navigator.msSaveOrOpenBlob) &#123;\n        navigator.msSaveBlob(blob, filename);\n    &#125; else &#123;\n        var link &#x3D; document.createElement(&#39;a&#39;);\n        var body &#x3D; document.querySelector(&#39;body&#39;);\n\n        link.href &#x3D; window.URL.createObjectURL(blob);\n        link.download &#x3D; filename;\n\n        &#x2F;&#x2F; fix Firefox\n        link.style.display &#x3D; &#39;none&#39;;\n        body.appendChild(link);\n\n        link.click();\n        body.removeChild(link);\n\n        window.URL.revokeObjectURL(link.href);\n    &#125;;\n&#125;</code></pre>","text":"1.引入JSZip&lt;script src&#x3D;&quot;jszip.js&quot;&gt;&lt;&#x2F;script&gt; &lt;script src&#x3D;&quot;jszip-utils.js&quot;&gt;&lt;&#x2F;script...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"工具类","slug":"工具类","count":3,"path":"api/categories/工具类.json"}],"tags":[{"name":"压缩","slug":"压缩","count":1,"path":"api/tags/压缩.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%BC%95%E5%85%A5JSZip\"><span class=\"toc-text\">1.引入JSZip</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%B0%81%E8%A3%85%E5%B7%A5%E5%85%B7%E7%B1%BB\"><span class=\"toc-text\">2.封装工具类</span></a></li></ol>","author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"wx小程序 bug记录","uid":"c6ed01f79789c67a9afc63759dd9592c","slug":"wx小程序-bug记录/index","date":"2022-07-29T16:00:00.000Z","updated":"2023-04-07T03:57:31.569Z","comments":true,"path":"api/articles/wx小程序-bug记录/index.json","keywords":null,"cover":[],"text":" 注意！ 遇到所有问题，先在真机跑一下，说不定好了 微信小程序webview两次返回问题1.下载SDK文件概述 | 微信开放文档 (qq.com 2.在H5页面中引入SDK文件加入如下逻辑即可 mounted() &#123; history.pushState(&#123;pa...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"bug","slug":"bug","count":6,"path":"api/categories/bug.json"}],"tags":[{"name":"bug","slug":"bug","count":6,"path":"api/tags/bug.json"},{"name":"wx小程序","slug":"wx小程序","count":1,"path":"api/tags/wx小程序.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"前端导出","uid":"ee1781b2ca281272a7524c04a8bacf0a","slug":"前端导出/index","date":"2022-07-01T16:00:00.000Z","updated":"2023-04-07T05:45:19.156Z","comments":true,"path":"api/articles/前端导出/index.json","keywords":null,"cover":null,"text":"1.引入工具类&lt;script lang&#x3D;&quot;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.sheetjs.com&#x2F;xlsx-0.18.7&#x2F;package&#x2F;dist&...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"工具类","slug":"工具类","count":3,"path":"api/categories/工具类.json"}],"tags":[{"name":"导出","slug":"导出","count":1,"path":"api/tags/导出.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}