{"title":"前端知识点之浏览器相关","uid":"8b52d758712f8281d95dde7e25dd1780","slug":"前端知识点之浏览器相关/index","date":"2023-07-16T16:00:00.000Z","updated":"2023-07-17T05:59:28.797Z","comments":true,"path":"api/articles/前端知识点之浏览器相关/index.json","keywords":null,"cover":null,"content":"<h2 id=\"浏览器相关\"><a href=\"#浏览器相关\" class=\"headerlink\" title=\"浏览器相关\"></a>浏览器相关</h2><h3 id=\"1-BOM\"><a href=\"#1-BOM\" class=\"headerlink\" title=\"1. BOM\"></a>1. BOM</h3><h4 id=\"1-1-location\"><a href=\"#1-1-location\" class=\"headerlink\" title=\"1.1 location\"></a>1.1 location</h4><p>location.href &#x3D;&gt; ‘<a href=\"https://www.xxx.com/search?class=browser#comments\">https://www.xxx.com/search?class=browser#comments</a>‘<br>    .origin &#x3D;&gt; <a href=\"https://www.xxx.com/\">https://www.xxx.com</a><br>    .protocal &#x3D;&gt; https<br>    .host &#x3D;&gt; <a href=\"http://www.xxx.com/\">www.xxx.com</a><br>    .port &#x3D;&gt; ‘’<br>    .pathname &#x3D;&gt; &#x2F;search&#x2F;<br>    .search &#x3D;&gt; ?class&#x3D;browser<br>    .hash &#x3D;&gt; #comments</p>\n<p>location.assign(‘url’) 跳转到指定path，并替换pathname &#x3D;&gt; 处理path<br>    .replace(‘url’) 重定向，视觉效果同上，并同时替换浏览历史<br>    .reload() 重新加载当前页面<br>    .toString() 转换成字符串</p>\n<h4 id=\"1-2-history\"><a href=\"#1-2-history\" class=\"headerlink\" title=\"1.2 history\"></a>1.2 history</h4><p>history.state &#x3D;&gt; 存储获取当前页面状态<br>    .replaceState &#x3D;&gt; 替换当前状态</p>\n<h4 id=\"1-3-navigator\"><a href=\"#1-3-navigator\" class=\"headerlink\" title=\"1.3 navigator\"></a>1.3 navigator</h4><p>navigator.userAgent 获取用户信息<br>    .clipboard 剪切板对象</p>\n<h4 id=\"1-4-screen\"><a href=\"#1-4-screen\" class=\"headerlink\" title=\"1.4 screen\"></a>1.4 screen</h4><p>获取显示区域 —— 屏幕</p>\n<p>考察点：判断区域大小</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; window 视窗判断 全局入口处\nwindow.innerHeight\nwindow.innerWidth\n\n&#x2F;&#x2F; window 视窗判断 文本处获取\ndocument.documentElement.clientHeight\ndocument.documentElement.clientWidth\n\n&#x2F;&#x2F; 网页内容size\ndocument.documentElement.offsetHeight\ndocument.documentElement.offsetWidth\n\n&#x2F;&#x2F; 定位\nscrollLeft &#x2F; scrollTop - 元素自己产生滚动条以后，当前可视区域对于其自己内部的左&#x2F;上的距离\noffsetLeft &#x2F; offsetTop - 距离文档左&#x2F;上距离\n</code></pre>\n\n<h3 id=\"2-事件模型\"><a href=\"#2-事件模型\" class=\"headerlink\" title=\"2. 事件模型\"></a>2. 事件模型</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;body&gt;\n    &lt;div&gt;\n        &lt;span&gt;&lt;&#x2F;span&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;body&gt;</code></pre>\n\n<p>冒泡: span -&gt; div -&gt; body -&gt; html -&gt; document<br>捕获: document -&gt; html -&gt; body -&gt; div -&gt; span</p>\n<p>阻止事件传播<br>event.stopPropagation();</p>\n<p>阻止默认事件<br>event.preventDefault();</p>\n<p>阻止同节点同类事件后续绑定事件<br>event.stopImmediatePropagation();</p>\n<h4 id=\"事件绑定性能优化\"><a href=\"#事件绑定性能优化\" class=\"headerlink\" title=\"事件绑定性能优化\"></a>事件绑定性能优化</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 为li添加事件\nlet liArr &#x3D; list.getElementsByTagName(&#39;li&#39;);\n&#x2F;&#x2F; 原始版本\nfor(let i &#x3D; 0; i &lt; liArr.length; i++) &#123;\n    liArr[i].addEventListener(&#39;click&#39;, () &#x3D;&gt; &#123;&#125;);\n&#125;\n&#x2F;&#x2F; 优化版本 利用冒泡\nfunction onClick(e) &#123;\n    let e &#x3D; e || window.event;\n    if (e.target.nodeName.toLowerCase() &#x3D;&#x3D;&#x3D; &#39;li&#39;) &#123;\n        let index &#x3D; Array.prototype.indexOf.call(liArr, e.target);\n        &#x2F;&#x2F; ……\n    &#125;\n&#125;\ndocument.querySelector(&#39;ul&#39;).addEventListener(&#39;click&#39;, onClick);</code></pre>\n\n<h3 id=\"3-网络\"><a href=\"#3-网络\" class=\"headerlink\" title=\"3. 网络\"></a>3. 网络</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 1. 实例化\nconst xhr &#x3D; new XMLHttpRequest();\n\n&#x2F;&#x2F; 2. 初始化连接\nxhr.open(method, url, async);\n\n&#x2F;&#x2F; 3. 发送请求\n&#x2F;&#x2F; post时 data被转为 body请求体\n&#x2F;&#x2F; get时 data传空值\n&#x2F;&#x2F; 不管请求方式是什么，都需要encodeURIComponent进行转码\nxhr.send(data);\n\n&#x2F;&#x2F; 4. 接收\nxhr.readyStatus\n&#x2F;&#x2F; 0 - 尚未调用open\n&#x2F;&#x2F; 1 - 已调用open\n&#x2F;&#x2F; 2 - 已调用send\n&#x2F;&#x2F; 3 - 已接收请求返回数据\n&#x2F;&#x2F; 4 - 已完成请求\n\nxhr.onreadystatechange &#x3D; () &#x3D;&gt; &#123;\n    if (xhr.readyStatus &#x3D;&#x3D;&#x3D; 4) &#123;\n        if (xhr.status &#x3D;&#x3D;&#x3D; 200) &#123;\n            &#x2F;&#x2F; ……\n        &#125;\n    &#125;\n&#125;\n\n&#x2F;&#x2F; 超时\nxhr.timeout &#x3D; 1000;\nxhr.ontimeout &#x3D; () &#x3D;&gt; &#123;\n    &#x2F;&#x2F; ……\n&#125;</code></pre>","text":"浏览器相关1. BOM1.1 locationlocation.href &#x3D;&gt; ‘https://www.xxx.com/search?class=browser#comments‘ .origin &#x3D;&gt; https://www.xxx.com ....","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"知识点","slug":"知识点","count":12,"path":"api/categories/知识点.json"}],"tags":[{"name":"面试题","slug":"面试题","count":6,"path":"api/tags/面试题.json"},{"name":"浏览器","slug":"浏览器","count":1,"path":"api/tags/浏览器.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">浏览器相关</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-BOM\"><span class=\"toc-text\">1. BOM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-location\"><span class=\"toc-text\">1.1 location</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-history\"><span class=\"toc-text\">1.2 history</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-navigator\"><span class=\"toc-text\">1.3 navigator</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-screen\"><span class=\"toc-text\">1.4 screen</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">2. 事件模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">事件绑定性能优化</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%BD%91%E7%BB%9C\"><span class=\"toc-text\">3. 网络</span></a></li></ol></li></ol>","author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JS 性能优化","uid":"f088523d700dba81d882acdf8af76d34","slug":"JS性能优化/index","date":"2023-07-22T16:00:00.000Z","updated":"2023-07-25T09:11:51.918Z","comments":true,"path":"api/articles/JS性能优化/index.json","keywords":null,"cover":[],"text":"性能优化 Navigation Timing API navigationStart &#x2F; end 表示从上一个文档卸载结束时 &#x3D;&gt; 如果没有上一个文档，这个值和fetchStart相等 unloadEventStart &#x2F; end 标识一个网页...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"效率优化","slug":"效率优化","count":5,"path":"api/categories/效率优化.json"}],"tags":[{"name":"JS","slug":"JS","count":4,"path":"api/tags/JS.json"},{"name":"性能优化","slug":"性能优化","count":1,"path":"api/tags/性能优化.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"前端知识点之JS汇总篇","uid":"c99a5fe4a5656caa27d2f9936274bd86","slug":"前端知识点之JS汇总篇/index","date":"2023-07-01T16:00:00.000Z","updated":"2023-07-20T02:49:40.521Z","comments":true,"path":"api/articles/前端知识点之JS汇总篇/index.json","keywords":null,"cover":[],"text":"1. 作用域 + 上下文 console.log(&#39;a&#39;); console.log(c); console.log(d); let c &#x3D; &#39;c&#39;; var d &#x3D; &#39;d&#39;; demo(); function ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"知识点","slug":"知识点","count":12,"path":"api/categories/知识点.json"}],"tags":[{"name":"JS","slug":"JS","count":4,"path":"api/tags/JS.json"},{"name":"面试题","slug":"面试题","count":6,"path":"api/tags/面试题.json"}],"author":{"name":"Life Experiencer","slug":"blog-author","avatar":"https://meng160626.github.io/charts/assets/headshot.cf6ae831.jpg","link":"/","description":"【开始努力最好的时机，就是当下】QQ:1350257855      微信:meng000414","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}